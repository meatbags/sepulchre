var stk=function(e){function t(i){if(a[i])return a[i].exports;var r=a[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var a={};return t.m=e,t.c=a,t.d=function(e,a,i){t.o(e,a)||Object.defineProperty(e,a,{configurable:!1,enumerable:!0,get:i})},t.n=function(e){var a=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(a,"a",a),a},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=2)}([function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=a(26);Object.keys(i).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[e]}})});var r=a(27);Object.keys(r).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return r[e]}})})},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=a(28);Object.keys(i).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[e]}})})},function(e,t,a){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var r=a(3),n=function e(){var t=this;i(this,e),this.master=new r.Master,window.onresize=function(){t.master.resize()}};window.onload=function(){new n}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=a(4);Object.keys(i).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[e]}})})},function(e,t,a){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0}),t.Master=void 0;var r=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}(),n=a(5),o=a(21),s=a(40),l=function(){function e(){i(this,e),this.width=window.innerWidth,this.height=window.innerHeight,this.domElement=document.getElementsByClassName("content")[0],this.scene=new o.Scene(this.domElement,this.width,this.height),this.renderer=new n.Renderer(this.domElement,this.width,this.height,this.scene.getScene(),this.scene.getCamera()),this.renderer2d=new n.Renderer2d(this.domElement,this.width,this.height,this.scene.getCamera()),this.timer=new s.Timer,this.loop()}return r(e,[{key:"resize",value:function(){this.width=window.innerWidth,this.height=window.innerHeight,this.scene.resize(this.width,this.height),this.renderer.resize(this.width,this.height),this.renderer}},{key:"loop",value:function(){var e=this;if(!this.paused){this.loopGuard||(this.loopGuard=!0,requestAnimationFrame(function(){e.loopGuard=!1,e.loop()}));var t=this.timer.getDelta();this.scene.update(t),this.renderer.render(t),this.renderer2d.render(t,this.scene.getObjects2d())}}}]),e}();t.Master=l},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=a(6);Object.keys(i).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[e]}})});var r=a(20);Object.keys(r).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return r[e]}})})},function(e,t,a){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0}),t.Renderer=void 0;var r=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}();a(7);var n=function(){function e(t,a,r,n,o){i(this,e),this.scene=n,this.camera=o,this.width=a,this.height=r,this.size=new THREE.Vector2(this.width,this.height),this.renderer=new THREE.WebGLRenderer({antialias:!0}),this.renderer.setSize(this.width,this.height),this.renderer.setClearColor(2236962,1),this.postProcessingSetup(),t.append(this.renderer.domElement)}return r(e,[{key:"resize",value:function(e,t){this.width=e,this.height=t,this.size.x=this.width,this.size.y=this.height,this.FXAAPass.uniforms.resolution.value.set(1/this.width,1/this.height),this.bloomPass.setSize(this.width,this.height),this.renderer.setSize(this.width,this.height),this.composer.setSize(this.width,this.height)}},{key:"postProcessingSetup",value:function(){this.renderPass=new THREE.RenderPass(this.scene,this.camera),this.FXAAPass=new THREE.ShaderPass(THREE.FXAAShader),this.FXAAPass.uniforms.resolution.value.set(1/this.width,1/this.height),this.bloomPass=new THREE.UnrealBloomPass(this.size,.5,.5,.85),this.posterPass=new THREE.PosterPass(this.size),this.noisePass=new THREE.NoisePass,this.noisePass.renderToScreen=!0,this.composer=new THREE.EffectComposer(this.renderer),this.composer.setSize(this.width,this.height),this.composer.addPass(this.renderPass),this.composer.addPass(this.FXAAPass),this.composer.addPass(this.posterPass),this.composer.addPass(this.bloomPass),this.composer.addPass(this.noisePass),this.renderer.gammaInput=!0,this.renderer.gammaOutput=!0}},{key:"render",value:function(e){this.composer.render(e)}}]),e}();t.Renderer=n},function(e,t,a){"use strict";a(8),a(9),a(10),a(11),a(12),a(13),a(14),a(15),a(16),a(17),a(18),a(19)},function(e,t,a){"use strict";THREE.CopyShader={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","gl_FragColor = opacity * texel;","}"].join("\n")}},function(e,t,a){"use strict";THREE.EffectComposer=function(e,t){if(this.renderer=e,void 0===t){var a={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat,stencilBuffer:!1},i=e.getDrawingBufferSize();t=new THREE.WebGLRenderTarget(i.width,i.height,a),t.texture.name="EffectComposer.rt1"}this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.passes=[],void 0===THREE.CopyShader&&console.error("THREE.EffectComposer relies on THREE.CopyShader"),void 0===THREE.ShaderPass&&console.error("THREE.EffectComposer relies on THREE.ShaderPass"),this.copyPass=new THREE.ShaderPass(THREE.CopyShader)},Object.assign(THREE.EffectComposer.prototype,{swapBuffers:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e},addPass:function(e){this.passes.push(e);var t=this.renderer.getDrawingBufferSize();e.setSize(t.width,t.height)},insertPass:function(e,t){this.passes.splice(t,0,e)},render:function(e){var t,a,i=!1,r=this.passes.length;for(a=0;a<r;a++)if(t=this.passes[a],!1!==t.enabled){if(t.render(this.renderer,this.writeBuffer,this.readBuffer,e,i),t.needsSwap){if(i){var n=this.renderer.context;n.stencilFunc(n.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),n.stencilFunc(n.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==THREE.MaskPass&&(t instanceof THREE.MaskPass?i=!0:t instanceof THREE.ClearMaskPass&&(i=!1))}},reset:function(e){if(void 0===e){var t=this.renderer.getDrawingBufferSize();e=this.renderTarget1.clone(),e.setSize(t.width,t.height)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2},setSize:function(e,t){this.renderTarget1.setSize(e,t),this.renderTarget2.setSize(e,t);for(var a=0;a<this.passes.length;a++)this.passes[a].setSize(e,t)}}),THREE.Pass=function(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1},Object.assign(THREE.Pass.prototype,{setSize:function(e,t){},render:function(e,t,a,i,r){console.error("THREE.Pass: .render() must be implemented in derived pass.")}})},function(e,t,a){"use strict";THREE.FXAAShader={uniforms:{tDiffuse:{value:null},resolution:{value:new THREE.Vector2(1/1024,1/512)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["precision highp float;","","uniform sampler2D tDiffuse;","","uniform vec2 resolution;","","varying vec2 vUv;","","// FXAA 3.11 implementation by NVIDIA, ported to WebGL by Agost Biro (biro@archilogic.com)","","//----------------------------------------------------------------------------------","// File:        es3-keplerFXAAassetsshaders/FXAA_DefaultES.frag","// SDK Version: v3.00","// Email:       gameworks@nvidia.com","// Site:        http://developer.nvidia.com/","//","// Copyright (c) 2014-2015, NVIDIA CORPORATION. All rights reserved.","//","// Redistribution and use in source and binary forms, with or without","// modification, are permitted provided that the following conditions","// are met:","//  * Redistributions of source code must retain the above copyright","//    notice, this list of conditions and the following disclaimer.","//  * Redistributions in binary form must reproduce the above copyright","//    notice, this list of conditions and the following disclaimer in the","//    documentation and/or other materials provided with the distribution.","//  * Neither the name of NVIDIA CORPORATION nor the names of its","//    contributors may be used to endorse or promote products derived","//    from this software without specific prior written permission.","//","// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY","// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE","// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR","// PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR","// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,","// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,","// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR","// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY","// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT","// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE","// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","//","//----------------------------------------------------------------------------------","","#define FXAA_PC 1","#define FXAA_GLSL_100 1","#define FXAA_QUALITY_PRESET 12","","#define FXAA_GREEN_AS_LUMA 1","","/*--------------------------------------------------------------------------*/","#ifndef FXAA_PC_CONSOLE","    //","    // The console algorithm for PC is included","    // for developers targeting really low spec machines.","    // Likely better to just run FXAA_PC, and use a really low preset.","    //","    #define FXAA_PC_CONSOLE 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_GLSL_120","    #define FXAA_GLSL_120 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_GLSL_130","    #define FXAA_GLSL_130 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_HLSL_3","    #define FXAA_HLSL_3 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_HLSL_4","    #define FXAA_HLSL_4 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_HLSL_5","    #define FXAA_HLSL_5 0","#endif","/*==========================================================================*/","#ifndef FXAA_GREEN_AS_LUMA","    //","    // For those using non-linear color,","    // and either not able to get luma in alpha, or not wanting to,","    // this enables FXAA to run using green as a proxy for luma.","    // So with this enabled, no need to pack luma in alpha.","    //","    // This will turn off AA on anything which lacks some amount of green.","    // Pure red and blue or combination of only R and B, will get no AA.","    //","    // Might want to lower the settings for both,","    //    fxaaConsoleEdgeThresholdMin","    //    fxaaQualityEdgeThresholdMin","    // In order to insure AA does not get turned off on colors","    // which contain a minor amount of green.","    //","    // 1 = On.","    // 0 = Off.","    //","    #define FXAA_GREEN_AS_LUMA 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_EARLY_EXIT","    //","    // Controls algorithm's early exit path.","    // On PS3 turning this ON adds 2 cycles to the shader.","    // On 360 turning this OFF adds 10ths of a millisecond to the shader.","    // Turning this off on console will result in a more blurry image.","    // So this defaults to on.","    //","    // 1 = On.","    // 0 = Off.","    //","    #define FXAA_EARLY_EXIT 1","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_DISCARD","    //","    // Only valid for PC OpenGL currently.","    // Probably will not work when FXAA_GREEN_AS_LUMA = 1.","    //","    // 1 = Use discard on pixels which don't need AA.","    //     For APIs which enable concurrent TEX+ROP from same surface.","    // 0 = Return unchanged color on pixels which don't need AA.","    //","    #define FXAA_DISCARD 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_FAST_PIXEL_OFFSET","    //","    // Used for GLSL 120 only.","    //","    // 1 = GL API supports fast pixel offsets","    // 0 = do not use fast pixel offsets","    //","    #ifdef GL_EXT_gpu_shader4","        #define FXAA_FAST_PIXEL_OFFSET 1","    #endif","    #ifdef GL_NV_gpu_shader5","        #define FXAA_FAST_PIXEL_OFFSET 1","    #endif","    #ifdef GL_ARB_gpu_shader5","        #define FXAA_FAST_PIXEL_OFFSET 1","    #endif","    #ifndef FXAA_FAST_PIXEL_OFFSET","        #define FXAA_FAST_PIXEL_OFFSET 0","    #endif","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_GATHER4_ALPHA","    //","    // 1 = API supports gather4 on alpha channel.","    // 0 = API does not support gather4 on alpha channel.","    //","    #if (FXAA_HLSL_5 == 1)","        #define FXAA_GATHER4_ALPHA 1","    #endif","    #ifdef GL_ARB_gpu_shader5","        #define FXAA_GATHER4_ALPHA 1","    #endif","    #ifdef GL_NV_gpu_shader5","        #define FXAA_GATHER4_ALPHA 1","    #endif","    #ifndef FXAA_GATHER4_ALPHA","        #define FXAA_GATHER4_ALPHA 0","    #endif","#endif","","","/*============================================================================","                        FXAA QUALITY - TUNING KNOBS","------------------------------------------------------------------------------","NOTE the other tuning knobs are now in the shader function inputs!","============================================================================*/","#ifndef FXAA_QUALITY_PRESET","    //","    // Choose the quality preset.","    // This needs to be compiled into the shader as it effects code.","    // Best option to include multiple presets is to","    // in each shader define the preset, then include this file.","    //","    // OPTIONS","    // -----------------------------------------------------------------------","    // 10 to 15 - default medium dither (10=fastest, 15=highest quality)","    // 20 to 29 - less dither, more expensive (20=fastest, 29=highest quality)","    // 39       - no dither, very expensive","    //","    // NOTES","    // -----------------------------------------------------------------------","    // 12 = slightly faster then FXAA 3.9 and higher edge quality (default)","    // 13 = about same speed as FXAA 3.9 and better than 12","    // 23 = closest to FXAA 3.9 visually and performance wise","    //  _ = the lowest digit is directly related to performance","    // _  = the highest digit is directly related to style","    //","    #define FXAA_QUALITY_PRESET 12","#endif","","","/*============================================================================","","                           FXAA QUALITY - PRESETS","","============================================================================*/","","/*============================================================================","                     FXAA QUALITY - MEDIUM DITHER PRESETS","============================================================================*/","#if (FXAA_QUALITY_PRESET == 10)","    #define FXAA_QUALITY_PS 3","    #define FXAA_QUALITY_P0 1.5","    #define FXAA_QUALITY_P1 3.0","    #define FXAA_QUALITY_P2 12.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 11)","    #define FXAA_QUALITY_PS 4","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 3.0","    #define FXAA_QUALITY_P3 12.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 12)","    #define FXAA_QUALITY_PS 5","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 4.0","    #define FXAA_QUALITY_P4 12.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 13)","    #define FXAA_QUALITY_PS 6","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 4.0","    #define FXAA_QUALITY_P5 12.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 14)","    #define FXAA_QUALITY_PS 7","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 4.0","    #define FXAA_QUALITY_P6 12.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 15)","    #define FXAA_QUALITY_PS 8","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 4.0","    #define FXAA_QUALITY_P7 12.0","#endif","","/*============================================================================","                     FXAA QUALITY - LOW DITHER PRESETS","============================================================================*/","#if (FXAA_QUALITY_PRESET == 20)","    #define FXAA_QUALITY_PS 3","    #define FXAA_QUALITY_P0 1.5","    #define FXAA_QUALITY_P1 2.0","    #define FXAA_QUALITY_P2 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 21)","    #define FXAA_QUALITY_PS 4","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 22)","    #define FXAA_QUALITY_PS 5","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 23)","    #define FXAA_QUALITY_PS 6","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 24)","    #define FXAA_QUALITY_PS 7","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 3.0","    #define FXAA_QUALITY_P6 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 25)","    #define FXAA_QUALITY_PS 8","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 4.0","    #define FXAA_QUALITY_P7 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 26)","    #define FXAA_QUALITY_PS 9","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 2.0","    #define FXAA_QUALITY_P7 4.0","    #define FXAA_QUALITY_P8 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 27)","    #define FXAA_QUALITY_PS 10","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 2.0","    #define FXAA_QUALITY_P7 2.0","    #define FXAA_QUALITY_P8 4.0","    #define FXAA_QUALITY_P9 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 28)","    #define FXAA_QUALITY_PS 11","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 2.0","    #define FXAA_QUALITY_P7 2.0","    #define FXAA_QUALITY_P8 2.0","    #define FXAA_QUALITY_P9 4.0","    #define FXAA_QUALITY_P10 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 29)","    #define FXAA_QUALITY_PS 12","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 2.0","    #define FXAA_QUALITY_P7 2.0","    #define FXAA_QUALITY_P8 2.0","    #define FXAA_QUALITY_P9 2.0","    #define FXAA_QUALITY_P10 4.0","    #define FXAA_QUALITY_P11 8.0","#endif","","/*============================================================================","                     FXAA QUALITY - EXTREME QUALITY","============================================================================*/","#if (FXAA_QUALITY_PRESET == 39)","    #define FXAA_QUALITY_PS 12","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.0","    #define FXAA_QUALITY_P2 1.0","    #define FXAA_QUALITY_P3 1.0","    #define FXAA_QUALITY_P4 1.0","    #define FXAA_QUALITY_P5 1.5","    #define FXAA_QUALITY_P6 2.0","    #define FXAA_QUALITY_P7 2.0","    #define FXAA_QUALITY_P8 2.0","    #define FXAA_QUALITY_P9 2.0","    #define FXAA_QUALITY_P10 4.0","    #define FXAA_QUALITY_P11 8.0","#endif","","","","/*============================================================================","","                                API PORTING","","============================================================================*/","#if (FXAA_GLSL_100 == 1) || (FXAA_GLSL_120 == 1) || (FXAA_GLSL_130 == 1)","    #define FxaaBool bool","    #define FxaaDiscard discard","    #define FxaaFloat float","    #define FxaaFloat2 vec2","    #define FxaaFloat3 vec3","    #define FxaaFloat4 vec4","    #define FxaaHalf float","    #define FxaaHalf2 vec2","    #define FxaaHalf3 vec3","    #define FxaaHalf4 vec4","    #define FxaaInt2 ivec2","    #define FxaaSat(x) clamp(x, 0.0, 1.0)","    #define FxaaTex sampler2D","#else","    #define FxaaBool bool","    #define FxaaDiscard clip(-1)","    #define FxaaFloat float","    #define FxaaFloat2 float2","    #define FxaaFloat3 float3","    #define FxaaFloat4 float4","    #define FxaaHalf half","    #define FxaaHalf2 half2","    #define FxaaHalf3 half3","    #define FxaaHalf4 half4","    #define FxaaSat(x) saturate(x)","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_GLSL_100 == 1)","  #define FxaaTexTop(t, p) texture2D(t, p, 0.0)","  #define FxaaTexOff(t, p, o, r) texture2D(t, p + (o * r), 0.0)","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_GLSL_120 == 1)","    // Requires,","    //  #version 120","    // And at least,","    //  #extension GL_EXT_gpu_shader4 : enable","    //  (or set FXAA_FAST_PIXEL_OFFSET 1 to work like DX9)","    #define FxaaTexTop(t, p) texture2DLod(t, p, 0.0)","    #if (FXAA_FAST_PIXEL_OFFSET == 1)","        #define FxaaTexOff(t, p, o, r) texture2DLodOffset(t, p, 0.0, o)","    #else","        #define FxaaTexOff(t, p, o, r) texture2DLod(t, p + (o * r), 0.0)","    #endif","    #if (FXAA_GATHER4_ALPHA == 1)","        // use #extension GL_ARB_gpu_shader5 : enable","        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)","        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)","        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)","        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)","    #endif","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_GLSL_130 == 1)",'    // Requires "#version 130" or better',"    #define FxaaTexTop(t, p) textureLod(t, p, 0.0)","    #define FxaaTexOff(t, p, o, r) textureLodOffset(t, p, 0.0, o)","    #if (FXAA_GATHER4_ALPHA == 1)","        // use #extension GL_ARB_gpu_shader5 : enable","        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)","        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)","        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)","        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)","    #endif","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_HLSL_3 == 1)","    #define FxaaInt2 float2","    #define FxaaTex sampler2D","    #define FxaaTexTop(t, p) tex2Dlod(t, float4(p, 0.0, 0.0))","    #define FxaaTexOff(t, p, o, r) tex2Dlod(t, float4(p + (o * r), 0, 0))","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_HLSL_4 == 1)","    #define FxaaInt2 int2","    struct FxaaTex { SamplerState smpl; Texture2D tex; };","    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)","    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_HLSL_5 == 1)","    #define FxaaInt2 int2","    struct FxaaTex { SamplerState smpl; Texture2D tex; };","    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)","    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)","    #define FxaaTexAlpha4(t, p) t.tex.GatherAlpha(t.smpl, p)","    #define FxaaTexOffAlpha4(t, p, o) t.tex.GatherAlpha(t.smpl, p, o)","    #define FxaaTexGreen4(t, p) t.tex.GatherGreen(t.smpl, p)","    #define FxaaTexOffGreen4(t, p, o) t.tex.GatherGreen(t.smpl, p, o)","#endif","","","/*============================================================================","                   GREEN AS LUMA OPTION SUPPORT FUNCTION","============================================================================*/","#if (FXAA_GREEN_AS_LUMA == 0)","    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.w; }","#else","    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.y; }","#endif","","","","","/*============================================================================","","                             FXAA3 QUALITY - PC","","============================================================================*/","#if (FXAA_PC == 1)","/*--------------------------------------------------------------------------*/","FxaaFloat4 FxaaPixelShader(","    //","    // Use noperspective interpolation here (turn off perspective interpolation).","    // {xy} = center of pixel","    FxaaFloat2 pos,","    //","    // Used only for FXAA Console, and not used on the 360 version.","    // Use noperspective interpolation here (turn off perspective interpolation).","    // {xy_} = upper left of pixel","    // {_zw} = lower right of pixel","    FxaaFloat4 fxaaConsolePosPos,","    //","    // Input color texture.","    // {rgb_} = color in linear or perceptual color space","    // if (FXAA_GREEN_AS_LUMA == 0)","    //     {__a} = luma in perceptual color space (not linear)","    FxaaTex tex,","    //","    // Only used on the optimized 360 version of FXAA Console.",'    // For everything but 360, just use the same input here as for "tex".',"    // For 360, same texture, just alias with a 2nd sampler.","    // This sampler needs to have an exponent bias of -1.","    FxaaTex fxaaConsole360TexExpBiasNegOne,","    //","    // Only used on the optimized 360 version of FXAA Console.",'    // For everything but 360, just use the same input here as for "tex".',"    // For 360, same texture, just alias with a 3nd sampler.","    // This sampler needs to have an exponent bias of -2.","    FxaaTex fxaaConsole360TexExpBiasNegTwo,","    //","    // Only used on FXAA Quality.","    // This must be from a constant/uniform.","    // {x_} = 1.0/screenWidthInPixels","    // {_y} = 1.0/screenHeightInPixels","    FxaaFloat2 fxaaQualityRcpFrame,","    //","    // Only used on FXAA Console.","    // This must be from a constant/uniform.","    // This effects sub-pixel AA quality and inversely sharpness.","    //   Where N ranges between,","    //     N = 0.50 (default)","    //     N = 0.33 (sharper)","    // {x__} = -N/screenWidthInPixels","    // {_y_} = -N/screenHeightInPixels","    // {_z_} =  N/screenWidthInPixels","    // {__w} =  N/screenHeightInPixels","    FxaaFloat4 fxaaConsoleRcpFrameOpt,","    //","    // Only used on FXAA Console.","    // Not used on 360, but used on PS3 and PC.","    // This must be from a constant/uniform.","    // {x__} = -2.0/screenWidthInPixels","    // {_y_} = -2.0/screenHeightInPixels","    // {_z_} =  2.0/screenWidthInPixels","    // {__w} =  2.0/screenHeightInPixels","    FxaaFloat4 fxaaConsoleRcpFrameOpt2,","    //","    // Only used on FXAA Console.","    // Only used on 360 in place of fxaaConsoleRcpFrameOpt2.","    // This must be from a constant/uniform.","    // {x__} =  8.0/screenWidthInPixels","    // {_y_} =  8.0/screenHeightInPixels","    // {_z_} = -4.0/screenWidthInPixels","    // {__w} = -4.0/screenHeightInPixels","    FxaaFloat4 fxaaConsole360RcpFrameOpt2,","    //","    // Only used on FXAA Quality.","    // This used to be the FXAA_QUALITY_SUBPIX define.","    // It is here now to allow easier tuning.","    // Choose the amount of sub-pixel aliasing removal.","    // This can effect sharpness.","    //   1.00 - upper limit (softer)","    //   0.75 - default amount of filtering","    //   0.50 - lower limit (sharper, less sub-pixel aliasing removal)","    //   0.25 - almost off","    //   0.00 - completely off","    FxaaFloat fxaaQualitySubpix,","    //","    // Only used on FXAA Quality.","    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD define.","    // It is here now to allow easier tuning.","    // The minimum amount of local contrast required to apply algorithm.","    //   0.333 - too little (faster)","    //   0.250 - low quality","    //   0.166 - default","    //   0.125 - high quality","    //   0.063 - overkill (slower)","    FxaaFloat fxaaQualityEdgeThreshold,","    //","    // Only used on FXAA Quality.","    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD_MIN define.","    // It is here now to allow easier tuning.","    // Trims the algorithm from processing darks.","    //   0.0833 - upper limit (default, the start of visible unfiltered edges)","    //   0.0625 - high quality (faster)","    //   0.0312 - visible limit (slower)","    // Special notes when using FXAA_GREEN_AS_LUMA,","    //   Likely want to set this to zero.","    //   As colors that are mostly not-green","    //   will appear very dark in the green channel!","    //   Tune by looking at mostly non-green content,","    //   then start at zero and increase until aliasing is a problem.","    FxaaFloat fxaaQualityEdgeThresholdMin,","    //","    // Only used on FXAA Console.","    // This used to be the FXAA_CONSOLE_EDGE_SHARPNESS define.","    // It is here now to allow easier tuning.","    // This does not effect PS3, as this needs to be compiled in.","    //   Use FXAA_CONSOLE_PS3_EDGE_SHARPNESS for PS3.","    //   Due to the PS3 being ALU bound,","    //   there are only three safe values here: 2 and 4 and 8.","    //   These options use the shaders ability to a free *|/ by 2|4|8.","    // For all other platforms can be a non-power of two.","    //   8.0 is sharper (default!!!)","    //   4.0 is softer","    //   2.0 is really soft (good only for vector graphics inputs)","    FxaaFloat fxaaConsoleEdgeSharpness,","    //","    // Only used on FXAA Console.","    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD define.","    // It is here now to allow easier tuning.","    // This does not effect PS3, as this needs to be compiled in.","    //   Use FXAA_CONSOLE_PS3_EDGE_THRESHOLD for PS3.","    //   Due to the PS3 being ALU bound,","    //   there are only two safe values here: 1/4 and 1/8.","    //   These options use the shaders ability to a free *|/ by 2|4|8.","    // The console setting has a different mapping than the quality setting.","    // Other platforms can use other values.","    //   0.125 leaves less aliasing, but is softer (default!!!)","    //   0.25 leaves more aliasing, and is sharper","    FxaaFloat fxaaConsoleEdgeThreshold,","    //","    // Only used on FXAA Console.","    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD_MIN define.","    // It is here now to allow easier tuning.","    // Trims the algorithm from processing darks.","    // The console setting has a different mapping than the quality setting.","    // This only applies when FXAA_EARLY_EXIT is 1.","    // This does not apply to PS3,","    // PS3 was simplified to avoid more shader instructions.","    //   0.06 - faster but more aliasing in darks","    //   0.05 - default","    //   0.04 - slower and less aliasing in darks","    // Special notes when using FXAA_GREEN_AS_LUMA,","    //   Likely want to set this to zero.","    //   As colors that are mostly not-green","    //   will appear very dark in the green channel!","    //   Tune by looking at mostly non-green content,","    //   then start at zero and increase until aliasing is a problem.","    FxaaFloat fxaaConsoleEdgeThresholdMin,","    //","    // Extra constants for 360 FXAA Console only.","    // Use zeros or anything else for other platforms.","    // These must be in physical constant registers and NOT immedates.","    // Immedates will result in compiler un-optimizing.","    // {xyzw} = float4(1.0, -1.0, 0.25, -0.25)","    FxaaFloat4 fxaaConsole360ConstDir",") {","/*--------------------------------------------------------------------------*/","    FxaaFloat2 posM;","    posM.x = pos.x;","    posM.y = pos.y;","    #if (FXAA_GATHER4_ALPHA == 1)","        #if (FXAA_DISCARD == 0)","            FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);","            #if (FXAA_GREEN_AS_LUMA == 0)","                #define lumaM rgbyM.w","            #else","                #define lumaM rgbyM.y","            #endif","        #endif","        #if (FXAA_GREEN_AS_LUMA == 0)","            FxaaFloat4 luma4A = FxaaTexAlpha4(tex, posM);","            FxaaFloat4 luma4B = FxaaTexOffAlpha4(tex, posM, FxaaInt2(-1, -1));","        #else","            FxaaFloat4 luma4A = FxaaTexGreen4(tex, posM);","            FxaaFloat4 luma4B = FxaaTexOffGreen4(tex, posM, FxaaInt2(-1, -1));","        #endif","        #if (FXAA_DISCARD == 1)","            #define lumaM luma4A.w","        #endif","        #define lumaE luma4A.z","        #define lumaS luma4A.x","        #define lumaSE luma4A.y","        #define lumaNW luma4B.w","        #define lumaN luma4B.z","        #define lumaW luma4B.x","    #else","        FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);","        #if (FXAA_GREEN_AS_LUMA == 0)","            #define lumaM rgbyM.w","        #else","            #define lumaM rgbyM.y","        #endif","        #if (FXAA_GLSL_100 == 1)","          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0, 1.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 0.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0,-1.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 0.0), fxaaQualityRcpFrame.xy));","        #else","          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0, 1), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0,-1), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 0), fxaaQualityRcpFrame.xy));","        #endif","    #endif","/*--------------------------------------------------------------------------*/","    FxaaFloat maxSM = max(lumaS, lumaM);","    FxaaFloat minSM = min(lumaS, lumaM);","    FxaaFloat maxESM = max(lumaE, maxSM);","    FxaaFloat minESM = min(lumaE, minSM);","    FxaaFloat maxWN = max(lumaN, lumaW);","    FxaaFloat minWN = min(lumaN, lumaW);","    FxaaFloat rangeMax = max(maxWN, maxESM);","    FxaaFloat rangeMin = min(minWN, minESM);","    FxaaFloat rangeMaxScaled = rangeMax * fxaaQualityEdgeThreshold;","    FxaaFloat range = rangeMax - rangeMin;","    FxaaFloat rangeMaxClamped = max(fxaaQualityEdgeThresholdMin, rangeMaxScaled);","    FxaaBool earlyExit = range < rangeMaxClamped;","/*--------------------------------------------------------------------------*/","    if(earlyExit)","        #if (FXAA_DISCARD == 1)","            FxaaDiscard;","        #else","            return rgbyM;","        #endif","/*--------------------------------------------------------------------------*/","    #if (FXAA_GATHER4_ALPHA == 0)","        #if (FXAA_GLSL_100 == 1)","          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0,-1.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 1.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0,-1.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 1.0), fxaaQualityRcpFrame.xy));","        #else","          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1,-1), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 1), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1,-1), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));","        #endif","    #else","        FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(1, -1), fxaaQualityRcpFrame.xy));","        FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));","    #endif","/*--------------------------------------------------------------------------*/","    FxaaFloat lumaNS = lumaN + lumaS;","    FxaaFloat lumaWE = lumaW + lumaE;","    FxaaFloat subpixRcpRange = 1.0/range;","    FxaaFloat subpixNSWE = lumaNS + lumaWE;","    FxaaFloat edgeHorz1 = (-2.0 * lumaM) + lumaNS;","    FxaaFloat edgeVert1 = (-2.0 * lumaM) + lumaWE;","/*--------------------------------------------------------------------------*/","    FxaaFloat lumaNESE = lumaNE + lumaSE;","    FxaaFloat lumaNWNE = lumaNW + lumaNE;","    FxaaFloat edgeHorz2 = (-2.0 * lumaE) + lumaNESE;","    FxaaFloat edgeVert2 = (-2.0 * lumaN) + lumaNWNE;","/*--------------------------------------------------------------------------*/","    FxaaFloat lumaNWSW = lumaNW + lumaSW;","    FxaaFloat lumaSWSE = lumaSW + lumaSE;","    FxaaFloat edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);","    FxaaFloat edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);","    FxaaFloat edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;","    FxaaFloat edgeVert3 = (-2.0 * lumaS) + lumaSWSE;","    FxaaFloat edgeHorz = abs(edgeHorz3) + edgeHorz4;","    FxaaFloat edgeVert = abs(edgeVert3) + edgeVert4;","/*--------------------------------------------------------------------------*/","    FxaaFloat subpixNWSWNESE = lumaNWSW + lumaNESE;","    FxaaFloat lengthSign = fxaaQualityRcpFrame.x;","    FxaaBool horzSpan = edgeHorz >= edgeVert;","    FxaaFloat subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;","/*--------------------------------------------------------------------------*/","    if(!horzSpan) lumaN = lumaW;","    if(!horzSpan) lumaS = lumaE;","    if(horzSpan) lengthSign = fxaaQualityRcpFrame.y;","    FxaaFloat subpixB = (subpixA * (1.0/12.0)) - lumaM;","/*--------------------------------------------------------------------------*/","    FxaaFloat gradientN = lumaN - lumaM;","    FxaaFloat gradientS = lumaS - lumaM;","    FxaaFloat lumaNN = lumaN + lumaM;","    FxaaFloat lumaSS = lumaS + lumaM;","    FxaaBool pairN = abs(gradientN) >= abs(gradientS);","    FxaaFloat gradient = max(abs(gradientN), abs(gradientS));","    if(pairN) lengthSign = -lengthSign;","    FxaaFloat subpixC = FxaaSat(abs(subpixB) * subpixRcpRange);","/*--------------------------------------------------------------------------*/","    FxaaFloat2 posB;","    posB.x = posM.x;","    posB.y = posM.y;","    FxaaFloat2 offNP;","    offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;","    offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;","    if(!horzSpan) posB.x += lengthSign * 0.5;","    if( horzSpan) posB.y += lengthSign * 0.5;","/*--------------------------------------------------------------------------*/","    FxaaFloat2 posN;","    posN.x = posB.x - offNP.x * FXAA_QUALITY_P0;","    posN.y = posB.y - offNP.y * FXAA_QUALITY_P0;","    FxaaFloat2 posP;","    posP.x = posB.x + offNP.x * FXAA_QUALITY_P0;","    posP.y = posB.y + offNP.y * FXAA_QUALITY_P0;","    FxaaFloat subpixD = ((-2.0)*subpixC) + 3.0;","    FxaaFloat lumaEndN = FxaaLuma(FxaaTexTop(tex, posN));","    FxaaFloat subpixE = subpixC * subpixC;","    FxaaFloat lumaEndP = FxaaLuma(FxaaTexTop(tex, posP));","/*--------------------------------------------------------------------------*/","    if(!pairN) lumaNN = lumaSS;","    FxaaFloat gradientScaled = gradient * 1.0/4.0;","    FxaaFloat lumaMM = lumaM - lumaNN * 0.5;","    FxaaFloat subpixF = subpixD * subpixE;","    FxaaBool lumaMLTZero = lumaMM < 0.0;","/*--------------------------------------------------------------------------*/","    lumaEndN -= lumaNN * 0.5;","    lumaEndP -= lumaNN * 0.5;","    FxaaBool doneN = abs(lumaEndN) >= gradientScaled;","    FxaaBool doneP = abs(lumaEndP) >= gradientScaled;","    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P1;","    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P1;","    FxaaBool doneNP = (!doneN) || (!doneP);","    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P1;","    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P1;","/*--------------------------------------------------------------------------*/","    if(doneNP) {","        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","        doneN = abs(lumaEndN) >= gradientScaled;","        doneP = abs(lumaEndP) >= gradientScaled;","        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P2;","        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P2;","        doneNP = (!doneN) || (!doneP);","        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P2;","        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P2;","/*--------------------------------------------------------------------------*/","        #if (FXAA_QUALITY_PS > 3)","        if(doneNP) {","            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","            doneN = abs(lumaEndN) >= gradientScaled;","            doneP = abs(lumaEndP) >= gradientScaled;","            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P3;","            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P3;","            doneNP = (!doneN) || (!doneP);","            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P3;","            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P3;","/*--------------------------------------------------------------------------*/","            #if (FXAA_QUALITY_PS > 4)","            if(doneNP) {","                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                doneN = abs(lumaEndN) >= gradientScaled;","                doneP = abs(lumaEndP) >= gradientScaled;","                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P4;","                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P4;","                doneNP = (!doneN) || (!doneP);","                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P4;","                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P4;","/*--------------------------------------------------------------------------*/","                #if (FXAA_QUALITY_PS > 5)","                if(doneNP) {","                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                    doneN = abs(lumaEndN) >= gradientScaled;","                    doneP = abs(lumaEndP) >= gradientScaled;","                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P5;","                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P5;","                    doneNP = (!doneN) || (!doneP);","                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P5;","                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P5;","/*--------------------------------------------------------------------------*/","                    #if (FXAA_QUALITY_PS > 6)","                    if(doneNP) {","                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                        doneN = abs(lumaEndN) >= gradientScaled;","                        doneP = abs(lumaEndP) >= gradientScaled;","                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P6;","                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P6;","                        doneNP = (!doneN) || (!doneP);","                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P6;","                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P6;","/*--------------------------------------------------------------------------*/","                        #if (FXAA_QUALITY_PS > 7)","                        if(doneNP) {","                            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                            doneN = abs(lumaEndN) >= gradientScaled;","                            doneP = abs(lumaEndP) >= gradientScaled;","                            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P7;","                            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P7;","                            doneNP = (!doneN) || (!doneP);","                            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P7;","                            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P7;","/*--------------------------------------------------------------------------*/","    #if (FXAA_QUALITY_PS > 8)","    if(doneNP) {","        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","        doneN = abs(lumaEndN) >= gradientScaled;","        doneP = abs(lumaEndP) >= gradientScaled;","        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P8;","        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P8;","        doneNP = (!doneN) || (!doneP);","        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P8;","        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P8;","/*--------------------------------------------------------------------------*/","        #if (FXAA_QUALITY_PS > 9)","        if(doneNP) {","            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","            doneN = abs(lumaEndN) >= gradientScaled;","            doneP = abs(lumaEndP) >= gradientScaled;","            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P9;","            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P9;","            doneNP = (!doneN) || (!doneP);","            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P9;","            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P9;","/*--------------------------------------------------------------------------*/","            #if (FXAA_QUALITY_PS > 10)","            if(doneNP) {","                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                doneN = abs(lumaEndN) >= gradientScaled;","                doneP = abs(lumaEndP) >= gradientScaled;","                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P10;","                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P10;","                doneNP = (!doneN) || (!doneP);","                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P10;","                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P10;","/*--------------------------------------------------------------------------*/","                #if (FXAA_QUALITY_PS > 11)","                if(doneNP) {","                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                    doneN = abs(lumaEndN) >= gradientScaled;","                    doneP = abs(lumaEndP) >= gradientScaled;","                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P11;","                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P11;","                    doneNP = (!doneN) || (!doneP);","                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P11;","                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P11;","/*--------------------------------------------------------------------------*/","                    #if (FXAA_QUALITY_PS > 12)","                    if(doneNP) {","                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                        doneN = abs(lumaEndN) >= gradientScaled;","                        doneP = abs(lumaEndP) >= gradientScaled;","                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P12;","                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P12;","                        doneNP = (!doneN) || (!doneP);","                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P12;","                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P12;","/*--------------------------------------------------------------------------*/","                    }","                    #endif","/*--------------------------------------------------------------------------*/","                }","                #endif","/*--------------------------------------------------------------------------*/","            }","            #endif","/*--------------------------------------------------------------------------*/","        }","        #endif","/*--------------------------------------------------------------------------*/","    }","    #endif","/*--------------------------------------------------------------------------*/","                        }","                        #endif","/*--------------------------------------------------------------------------*/","                    }","                    #endif","/*--------------------------------------------------------------------------*/","                }","                #endif","/*--------------------------------------------------------------------------*/","            }","            #endif","/*--------------------------------------------------------------------------*/","        }","        #endif","/*--------------------------------------------------------------------------*/","    }","/*--------------------------------------------------------------------------*/","    FxaaFloat dstN = posM.x - posN.x;","    FxaaFloat dstP = posP.x - posM.x;","    if(!horzSpan) dstN = posM.y - posN.y;","    if(!horzSpan) dstP = posP.y - posM.y;","/*--------------------------------------------------------------------------*/","    FxaaBool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;","    FxaaFloat spanLength = (dstP + dstN);","    FxaaBool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;","    FxaaFloat spanLengthRcp = 1.0/spanLength;","/*--------------------------------------------------------------------------*/","    FxaaBool directionN = dstN < dstP;","    FxaaFloat dst = min(dstN, dstP);","    FxaaBool goodSpan = directionN ? goodSpanN : goodSpanP;","    FxaaFloat subpixG = subpixF * subpixF;","    FxaaFloat pixelOffset = (dst * (-spanLengthRcp)) + 0.5;","    FxaaFloat subpixH = subpixG * fxaaQualitySubpix;","/*--------------------------------------------------------------------------*/","    FxaaFloat pixelOffsetGood = goodSpan ? pixelOffset : 0.0;","    FxaaFloat pixelOffsetSubpix = max(pixelOffsetGood, subpixH);","    if(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;","    if( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;","    #if (FXAA_DISCARD == 1)","        return FxaaTexTop(tex, posM);","    #else","        return FxaaFloat4(FxaaTexTop(tex, posM).xyz, lumaM);","    #endif","}","/*==========================================================================*/","#endif","","void main() {","  gl_FragColor = FxaaPixelShader(","    vUv,","    vec4(0.0),","    tDiffuse,","    tDiffuse,","    tDiffuse,","    resolution,","    vec4(0.0),","    vec4(0.0),","    vec4(0.0),","    0.75,","    0.166,","    0.0833,","    0.0,","    0.0,","    0.0,","    vec4(0.0)","  );","","  // TODO avoid querying texture twice for same texel","  gl_FragColor.a = texture2D(tDiffuse, vUv).a;","}"].join("\n")}},function(e,t,a){"use strict";THREE.LuminosityHighPassShader={shaderID:"luminosityHighPass",uniforms:{tDiffuse:{type:"t",value:null},luminosityThreshold:{type:"f",value:1},smoothWidth:{type:"f",value:1},defaultColor:{type:"c",value:new THREE.Color(0)},defaultOpacity:{type:"f",value:0}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform vec3 defaultColor;","uniform float defaultOpacity;","uniform float luminosityThreshold;","uniform float smoothWidth;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","vec3 luma = vec3( 0.299, 0.587, 0.114 );","float v = dot( texel.xyz, luma );","vec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );","float alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );","gl_FragColor = mix( outputColor, texel, alpha );","}"].join("\n")}},function(e,t,a){"use strict";window.mobilecheck=function(){var e=!1;return function(t){(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4)))&&(e=!0)}(navigator.userAgent||navigator.vendor||window.opera),e}},function(e,t,a){"use strict";THREE.RenderPass=function(e,t,a,i,r){THREE.Pass.call(this),this.scene=e,this.camera=t,this.overrideMaterial=a,this.clearColor=i,this.clearAlpha=void 0!==r?r:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1},THREE.RenderPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.RenderPass,render:function(e,t,a,i,r){var n=e.autoClear;e.autoClear=!1,this.scene.overrideMaterial=this.overrideMaterial;var o,s;this.clearColor&&(o=e.getClearColor().getHex(),s=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.render(this.scene,this.camera,this.renderToScreen?null:a,this.clear),this.clearColor&&e.setClearColor(o,s),this.scene.overrideMaterial=null,e.autoClear=n}})},function(e,t,a){"use strict";THREE.ShaderPass=function(e,t){THREE.Pass.call(this),this.textureID=void 0!==t?t:"tDiffuse",e instanceof THREE.ShaderMaterial?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=THREE.UniformsUtils.clone(e.uniforms),this.material=new THREE.ShaderMaterial({defines:e.defines||{},uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new THREE.Scene,this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null),this.quad.frustumCulled=!1,this.scene.add(this.quad)},THREE.ShaderPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.ShaderPass,render:function(e,t,a,i,r){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=a.texture),this.quad.material=this.material,this.renderToScreen?e.render(this.scene,this.camera):e.render(this.scene,this.camera,t,this.clear)}})},function(e,t,a){"use strict";THREE.UnrealBloomPass=function(e,t,a,i){THREE.Pass.call(this),this.strength=void 0!==t?t:1,this.radius=a,this.threshold=i,this.resolution=void 0!==e?new THREE.Vector2(e.x,e.y):new THREE.Vector2(256,256);var r={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat};this.renderTargetsHorizontal=[],this.renderTargetsVertical=[],this.nMips=5;var n=Math.round(this.resolution.x/2),o=Math.round(this.resolution.y/2);this.renderTargetBright=new THREE.WebGLRenderTarget(n,o,r),this.renderTargetBright.texture.name="UnrealBloomPass.bright",this.renderTargetBright.texture.generateMipmaps=!1;for(var s=0;s<this.nMips;s++){var l=new THREE.WebGLRenderTarget(n,o,r);l.texture.name="UnrealBloomPass.h"+s,l.texture.generateMipmaps=!1,this.renderTargetsHorizontal.push(l);var l=new THREE.WebGLRenderTarget(n,o,r);l.texture.name="UnrealBloomPass.v"+s,l.texture.generateMipmaps=!1,this.renderTargetsVertical.push(l),n=Math.round(n/2),o=Math.round(o/2)}void 0===THREE.LuminosityHighPassShader&&console.error("THREE.UnrealBloomPass relies on THREE.LuminosityHighPassShader");var u=THREE.LuminosityHighPassShader;this.highPassUniforms=THREE.UniformsUtils.clone(u.uniforms),this.highPassUniforms.luminosityThreshold.value=i,this.highPassUniforms.smoothWidth.value=.01,this.materialHighPassFilter=new THREE.ShaderMaterial({uniforms:this.highPassUniforms,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader,defines:{}}),this.separableBlurMaterials=[];for(var f=[3,5,7,9,11],n=Math.round(this.resolution.x/2),o=Math.round(this.resolution.y/2),s=0;s<this.nMips;s++)this.separableBlurMaterials.push(this.getSeperableBlurMaterial(f[s])),this.separableBlurMaterials[s].uniforms.texSize.value=new THREE.Vector2(n,o),n=Math.round(n/2),o=Math.round(o/2);this.compositeMaterial=this.getCompositeMaterial(this.nMips),this.compositeMaterial.uniforms.blurTexture1.value=this.renderTargetsVertical[0].texture,this.compositeMaterial.uniforms.blurTexture2.value=this.renderTargetsVertical[1].texture,this.compositeMaterial.uniforms.blurTexture3.value=this.renderTargetsVertical[2].texture,this.compositeMaterial.uniforms.blurTexture4.value=this.renderTargetsVertical[3].texture,this.compositeMaterial.uniforms.blurTexture5.value=this.renderTargetsVertical[4].texture,this.compositeMaterial.uniforms.bloomStrength.value=t,this.compositeMaterial.uniforms.bloomRadius.value=.1,this.compositeMaterial.needsUpdate=!0;var h=[1,.8,.6,.4,.2];this.compositeMaterial.uniforms.bloomFactors.value=h,this.bloomTintColors=[new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1)],this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,void 0===THREE.CopyShader&&console.error("THREE.BloomPass relies on THREE.CopyShader");var d=THREE.CopyShader;this.copyUniforms=THREE.UniformsUtils.clone(d.uniforms),this.copyUniforms.opacity.value=1,this.materialCopy=new THREE.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader,blending:THREE.AdditiveBlending,depthTest:!1,depthWrite:!1,transparent:!0}),this.enabled=!0,this.needsSwap=!1,this.oldClearColor=new THREE.Color,this.oldClearAlpha=1,this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new THREE.Scene,this.basic=new THREE.MeshBasicMaterial,this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null),this.quad.frustumCulled=!1,this.scene.add(this.quad)},THREE.UnrealBloomPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.UnrealBloomPass,dispose:function(){for(var e=0;e<this.renderTargetsHorizontal.length;e++)this.renderTargetsHorizontal[e].dispose();for(var e=0;e<this.renderTargetsVertical.length;e++)this.renderTargetsVertical[e].dispose();this.renderTargetBright.dispose()},setSize:function(e,t){var a=Math.round(e/2),i=Math.round(t/2);this.renderTargetBright.setSize(a,i);for(var r=0;r<this.nMips;r++)this.renderTargetsHorizontal[r].setSize(a,i),this.renderTargetsVertical[r].setSize(a,i),this.separableBlurMaterials[r].uniforms.texSize.value=new THREE.Vector2(a,i),a=Math.round(a/2),i=Math.round(i/2)},render:function(e,t,a,i,r){this.oldClearColor.copy(e.getClearColor()),this.oldClearAlpha=e.getClearAlpha();var n=e.autoClear;e.autoClear=!1,e.setClearColor(new THREE.Color(0,0,0),0),r&&e.context.disable(e.context.STENCIL_TEST),this.renderToScreen&&(this.quad.material=this.basic,this.basic.map=a.texture,e.render(this.scene,this.camera,void 0,!0)),this.highPassUniforms.tDiffuse.value=a.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this.quad.material=this.materialHighPassFilter,e.render(this.scene,this.camera,this.renderTargetBright,!0);for(var o=this.renderTargetBright,s=0;s<this.nMips;s++)this.quad.material=this.separableBlurMaterials[s],this.separableBlurMaterials[s].uniforms.colorTexture.value=o.texture,this.separableBlurMaterials[s].uniforms.direction.value=THREE.UnrealBloomPass.BlurDirectionX,e.render(this.scene,this.camera,this.renderTargetsHorizontal[s],!0),this.separableBlurMaterials[s].uniforms.colorTexture.value=this.renderTargetsHorizontal[s].texture,this.separableBlurMaterials[s].uniforms.direction.value=THREE.UnrealBloomPass.BlurDirectionY,e.render(this.scene,this.camera,this.renderTargetsVertical[s],!0),o=this.renderTargetsVertical[s];this.quad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,e.render(this.scene,this.camera,this.renderTargetsHorizontal[0],!0),this.quad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,r&&e.context.enable(e.context.STENCIL_TEST),this.renderToScreen?e.render(this.scene,this.camera,void 0,!1):e.render(this.scene,this.camera,a,!1),e.setClearColor(this.oldClearColor,this.oldClearAlpha),e.autoClear=n},getSeperableBlurMaterial:function(e){return new THREE.ShaderMaterial({defines:{KERNEL_RADIUS:e,SIGMA:e},uniforms:{colorTexture:{value:null},texSize:{value:new THREE.Vector2(.5,.5)},direction:{value:new THREE.Vector2(.5,.5)}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"#include <common>\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 texSize;\t\t\t\tuniform vec2 direction;\t\t\t\t\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\t\t\t\t}\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\t\t\t\t\tfloat fSigma = float(SIGMA);\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\t\t\t\t\t\tfloat x = float(i);\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\t\t\t\t\t\tweightSum += 2.0 * w;\t\t\t\t\t}\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n\t\t\t\t}"})},getCompositeMaterial:function(e){return new THREE.ShaderMaterial({defines:{NUM_MIPS:e},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},dirtTexture:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\t\t\t\tuniform sampler2D blurTexture1;\t\t\t\tuniform sampler2D blurTexture2;\t\t\t\tuniform sampler2D blurTexture3;\t\t\t\tuniform sampler2D blurTexture4;\t\t\t\tuniform sampler2D blurTexture5;\t\t\t\tuniform sampler2D dirtTexture;\t\t\t\tuniform float bloomStrength;\t\t\t\tuniform float bloomRadius;\t\t\t\tuniform float bloomFactors[NUM_MIPS];\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\t\t\t\t\t\t\t\tfloat lerpBloomFactor(const in float factor) { \t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\t\t\t\t}\t\t\t\t\t\t\t\tvoid main() {\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\t\t\t\t}"})}}),THREE.UnrealBloomPass.BlurDirectionX=new THREE.Vector2(1,0),THREE.UnrealBloomPass.BlurDirectionY=new THREE.Vector2(0,1)},function(e,t,a){"use strict";var i=(new Date).getHours(),r=i<6||i>=21?"BLUE":12==i?"GOLD":"RED";"#red"==window.location.hash?r="RED":"#blue"==window.location.hash?r="BLUE":"#gold"==window.location.hash&&(r="GOLD"),THREE.MechanicsShader={uniforms:{time:{value:0},width:{value:100},height:{value:100},tDiffuse:{value:null}},vertexShader:"\n    varying vec2 vUv;\n\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n  ",fragmentShader:"\n    #define PI 3.14159\n    #define UV_SCALE 0.02\n    #define MAX_HEIGHT 4.0\n\n    varying vec2 vUv;\n    uniform sampler2D tDiffuse;\n    uniform float time;\n\n    float rand(vec2 seed) {\n      return fract(sin(dot(seed.xy, vec2(12.9898,78.233))) * 43758.5453);\n    }\n\n    vec2 randVec2() {\n      return vec2(rand(vUv + time), rand(vUv + time + 1.));\n    }\n\n    vec3 getPosition(vec2 coords) {\n      vec4 sample = texture2D(tDiffuse, coords);\n      vec3 res = vec3(coords.x / UV_SCALE, sample.x * MAX_HEIGHT, coords.y / UV_SCALE);\n      return res;\n    }\n\n    float computeAO(vec2 uvOff, vec3 P, vec3 N) {\n      vec3 Vpos = getPosition(vUv + uvOff * UV_SCALE) - P;\n      vec3 Vnorm = normalize(Vpos);\n      float dist = length(Vpos);\n      return max(dot(N, Vnorm) * (1.0 / (1.0 + dist)), 0.0);\n    }\n\n    float sampleAO(vec3 P) {\n      vec3 N = vec3(0., 1., 0.);\n      vec2 randOffset = randVec2();\n      const int iterations = 4;\n      float totalAO = 0.0;\n\n      for (int i=0; i<iterations; i++) {\n        vec2 coord1 = reflect(vec2(\n          (i < 2) ? ((i == 0) ? 1.0 : -1.0) : 0.0,\n          (i > 1) ? ((i == 2) ? 1.0 : -1.0) : 0.0\n        ), randOffset);\n        vec2 coord2 = vec2(\n          coord1.x * 0.707 - coord1.y * 0.707,\n          coord1.x * 0.707 + coord1.y * 0.707\n        );\n        totalAO += computeAO(coord1 * 0.25, P, N);\n        totalAO += computeAO(coord2 * 0.5, P, N);\n        totalAO += computeAO(coord1 * 0.75, P, N);\n        totalAO += computeAO(coord2, P, N);\n      }\n\n      return (totalAO / (float(iterations) * 4.));\n    }\n\n    void main() {\n      float minc = 0.0625;\n      //float invc = 0.9375;\n\n      vec4 tex = texture2D(tDiffuse, vUv);\n      vec3 P = getPosition(vUv);\n      float ao = sampleAO(P);\n      vec4 frag = max(tex - ao, minc);\n\n      "+("RED"==r?"frag.r += ao * 0.5;":"BLUE"==r?"frag.g += ao * 0.2; frag.b += ao * 0.6;":"frag.r += ao * 0.3; frag.g += ao * 0.2;")+"\n\n      gl_FragColor = frag;\n    }\n  "},THREE.MechanicsPass=function(e){THREE.Pass.call(this),this.shader=THREE.MechanicsShader,this.material=new THREE.ShaderMaterial(this.shader),this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new THREE.Scene,this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),this.material),this.quad.frustumCulled=!1,this.scene.add(this.quad),this.time=0},THREE.MechanicsPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.MechanicsPass,render:function(e,t,a,i,r){this.shader.uniforms.tDiffuse.value=a.texture,this.time=(this.time+i)%10,this.shader.uniforms.time.value=this.time,this.renderToScreen?e.render(this.scene,this.camera):e.render(this.scene,this.camera,t,this.clear)}})},function(e,t,a){"use strict";THREE.NoiseShader={uniforms:{tDiffuse:{value:null},time:{value:0}},vertexShader:"\n    varying vec2 vUv;\n\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n  ",fragmentShader:"\n    varying vec2 vUv;\n    uniform float time;\n    uniform sampler2D tDiffuse;\n\n    float rand(vec2 seed) {\n      return fract(sin(dot(seed.xy ,vec2(12.9898,78.233))) * 43758.5453);\n    }\n\n    void main() {\n      vec4 tex = texture2D(tDiffuse, vUv);\n      float scale = 1.0 - tex.r;\n      float r = tex.r + rand(vUv + time) * 0.04 * scale;\n      float g = tex.g + rand(vUv + time + 1.) * 0.04 * scale;\n      float b = tex.b + rand(vUv + time + 2.) * 0.06 * scale;\n      gl_FragColor = vec4(r, g, b, tex.a);\n    }\n  "},THREE.NoisePass=function(){THREE.Pass.call(this),this.shader=THREE.NoiseShader,this.material=new THREE.ShaderMaterial(this.shader),this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new THREE.Scene,this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),this.material),this.quad.frustumCulled=!1,this.time=0,this.scene.add(this.quad)},THREE.NoisePass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.NoisePass,render:function(e,t,a,i,r){this.time=(this.time+i)%10,this.shader.uniforms.time.value=this.time,this.shader.uniforms.tDiffuse.value=a.texture,this.renderToScreen?e.render(this.scene,this.camera):e.render(this.scene,this.camera,t,this.clear)}})},function(e,t,a){"use strict";THREE.DepthShader={uniforms:{},vertexShader:"\n    varying vec4 vModel;\n    varying vec3 vNormal;\n\n    void main() {\n      vNormal = normal;\n      vModel = modelMatrix * vec4(position, 1.0);\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    }\n  ",fragmentShader:"\n    varying vec4 vModel;\n    varying vec3 vNormal;\n\n    void main() {\n      float minc = 0.0625;\n      float invc = 0.9375;\n\n      if (vModel.y <= 0.) {\n        gl_FragColor = vec4(minc, minc, minc, 1.0);\n      } else {\n        float t = (vModel.y >= 0.0) ? vModel.y / 3.0 : 0.0;\n        float d = (t <= 1.0) ? t : max(1.0 - 0.75 * (t - 1.0), 0.0);\n        d = d * invc + minc;\n        gl_FragColor = vec4(d, d, d, 1.0);\n      }\n    }\n  "}},function(e,t,a){"use strict";THREE.PosterShader={uniforms:{tDiffuse:{value:null}},vertexShader:"\n    varying vec2 vUv;\n\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n  ",fragmentShader:"\n    #define PI 3.14159\n    #define UV_SCALE 0.02\n    #define MAX_HEIGHT 0.5\n    varying vec2 vUv;\n    uniform sampler2D tDiffuse;\n\n    float posterise(float val, float amount) {\n      return floor(val * amount) / amount;\n    }\n\n    float posteriseCeil(float val, float amount) {\n      return ceil(val * amount) / amount;\n    }\n\n    void main() {\n      vec4 frag = texture2D(tDiffuse, vUv);\n      frag.r = posterise(frag.r, 64.0);\n      //frag.g = posterise(frag.g, 128.0);\n      //frag.b = posterise(frag.b, 128.0);\n      gl_FragColor = frag;\n    }\n  "},THREE.PosterPass=function(e){THREE.Pass.call(this),this.size=e,this.shader=THREE.PosterShader,this.material=new THREE.ShaderMaterial(this.shader),this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new THREE.Scene,this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),this.material),this.quad.frustumCulled=!1,this.scene.add(this.quad),this.time=0},THREE.PosterPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.PosterPass,render:function(e,t,a,i,r){this.shader.uniforms.tDiffuse.value=a.texture,this.renderToScreen?e.render(this.scene,this.camera):e.render(this.scene,this.camera,t,this.clear)}})},function(e,t,a){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}(),n=function(){function e(t,a,r,n){i(this,e),this.cvs=document.createElement("canvas"),this.ctx=this.cvs.getContext("2d"),this.cvs.width=a,this.cvs.height=r,this.ctx.font="20px Playfair Display",this.camera=n,t.append(this.cvs)}return r(e,[{key:"clear",value:function(){this.ctx.clearRect(0,0,this.cvs.width,this.cvs.height)}},{key:"resize",value:function(e,t){this.cvs.width=e,this.cvs.height=t}},{key:"render",value:function(e,t){this.clear();for(var a=0,i=t.length;a<i;++a)t[a].draw(this.ctx);this.ctx.fillRect(0,0,20,20)}}]),e}();t.Renderer2d=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=a(22);Object.keys(i).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[e]}})})},function(e,t,a){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0}),t.Scene=void 0;var r=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}(),n=a(23),o=a(24),s=a(25),l=a(29),u=a(39),f=a(0),h=function(){function e(t,a,r){var h=this;i(this,e),this.scene=new THREE.Scene,this.scene.fog=new THREE.FogExp2(2236962,.0275),this.collider=new Collider.System,this.player=new s.Player(t,this.scene,this.collider),this.camera=new n.Camera(a,r,this.player.position,this.player.rotation),this.lighting=new o.Lighting(this.scene),this.map=new l.Map(this.scene,this.collider,this.camera.getCamera(),a,r),this.raycaster=new u.Raycaster(t,this.camera.getCamera()),this.mouse=new f.Mouse(t,function(e){h.mouse.start(e)},function(e){h.onMouseMove(e)},function(e){h.onMouseUp(e)})}return r(e,[{key:"getObjects2d",value:function(){return this.map.getObjects2d()}},{key:"onMouseMove",value:function(e){this.mouse.isActive()||this.map.activateObjects(this.raycaster.cast(e,this.map.getInteractive()))}},{key:"onMouseUp",value:function(e){(new Date).getTime();this.mouse.stop(),this.mouse.getTimestamp()}},{key:"resize",value:function(e,t){this.camera.resize(e,t),this.map.resize(e,t),this.raycaster.resize()}},{key:"update",value:function(e){this.teleportFlag&&(this.teleportFlag=!1,this.player.teleport(this.teleport),this.map.teleport(this.teleport)),this.player.update(e),this.camera.update(e),this.map.update(e);var t=this.map.getTeleport(this.player.getTargetPosition());(t.x||t.z)&&(this.teleportFlag=!0,this.teleport=t)}},{key:"getScene",value:function(){return this.scene}},{key:"getCamera",value:function(){return this.camera.getCamera()}}]),e}();t.Scene=h},function(e,t,a){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}(),n=function(){function e(t,a,r,n){i(this,e),this.position=r,this.rotation=n,this.fov=65,this.aspectRatio=t/a,this.offset=.1,this.height=2,this.camera=new THREE.PerspectiveCamera(this.fov,this.aspectRatio,.1,1e3),this.camera.up=new THREE.Vector3(0,1,0)}return r(e,[{key:"resize",value:function(e,t){this.aspectRatio=e/t,this.camera.aspect=this.aspectRatio,this.camera.updateProjectionMatrix()}},{key:"update",value:function(e){var t=this.offset-this.offset*Math.abs(Math.sin(this.rotation.pitch)),a=this.offset,i=this.position.y+this.height;this.camera.up.z=-Math.sin(this.rotation.yaw)*this.rotation.roll,this.camera.up.x=Math.cos(this.rotation.yaw)*this.rotation.roll,this.camera.position.set(this.position.x-Math.sin(this.rotation.yaw)*t/4,i-Math.sin(this.rotation.pitch)*a/4,this.position.z-Math.cos(this.rotation.yaw)*t/4),this.camera.lookAt(new THREE.Vector3(this.position.x+Math.sin(this.rotation.yaw)*t,i+Math.sin(this.rotation.pitch)*a,this.position.z+Math.cos(this.rotation.yaw)*t))}},{key:"getCamera",value:function(){return this.camera}},{key:"teleport",value:function(){this.camera.updateProjectionMatrix()}}]),e}();t.Camera=n},function(e,t,a){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}(),n=function(){function e(t){i(this,e),this.scene=t,this.lights={point:{},ambient:{a:new THREE.AmbientLight(16777215,.05)}},this.setLightPositions();for(var a in this.lights.point)this.lights.point.hasOwnProperty(a)&&this.scene.add(this.lights.point[a]);for(var r in this.lights.ambient)this.lights.ambient.hasOwnProperty(r)&&this.scene.add(this.lights.ambient[r])}return r(e,[{key:"setLightPositions",value:function(){}}]),e}();t.Lighting=n},function(e,t,a){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0}),t.Player=void 0;var r=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}(),n=a(0),o=a(1),s=function(){function e(t,a,r){var o=this;i(this,e),this.scene=a,this.colliderSystem=r,this.domElement=t,this.position=new THREE.Vector3(0,1,0),this.rotation={pitch:0,roll:0,yaw:0},this.motion=new THREE.Vector3,this.target={position:new THREE.Vector3(0,1,0),rotation:{pitch:0,roll:0,yaw:0},motion:new THREE.Vector3},this.collider=new Collider.Collider(this.target.position,this.motion),this.collider.setPhysics({gravity:20}),this.speed=8,this.rotationSpeed=.8*Math.PI,this.jump=11,this.jumpSpeedMultiplier=.25,this.falling=!1,this.fallTime=0,this.fallTimeThreshold=.2,this.noclip=!1,this.noclipSpeed=30,this.minPitch=.15*-Math.PI,this.maxPitch=.15*Math.PI,this.adjust={slow:.05,normal:.1,fast:.15,maximum:.3},this.keys={},this.keyboard=new n.Keyboard(function(e){o.onKeyboard(e)}),this.hookMouse(),this.group=new THREE.Group,this.light=new THREE.PointLight(16777215,.25),this.light.position.y=1.8,this.group.add(this.light),this.scene.add(this.group)}return r(e,[{key:"onKeyboard",value:function(e){switch(e){case"a":case"A":case"ArrowLeft":this.keys.left=this.keyboard.keys[e];break;case"d":case"D":case"ArrowRight":this.keys.right=this.keyboard.keys[e];break;case"w":case"W":case"ArrowUp":this.keys.up=this.keyboard.keys[e];break;case"s":case"S":case"ArrowDown":this.keys.down=this.keyboard.keys[e];break;case" ":this.keys.jump=this.keyboard.keys[e];break;case"x":case"X":this.keys.noclip=this.keyboard.keys[e]}}},{key:"move",value:function(e){if(this.keys.left||this.keys.right){var t=(this.keys.left?1:0)+(this.keys.right?-1:0);this.target.rotation.yaw+=t*this.rotationSpeed*e}if(this.keys.up||this.keys.down){var a=this.noclip?this.noclipSpeed*(1-Math.abs(Math.sin(this.target.rotation.pitch))):this.speed,i=(this.keys.up?1:0)+(this.keys.down?-1:0);this.target.motion.x=Math.sin(this.rotation.yaw)*a*i,this.target.motion.z=Math.cos(this.rotation.yaw)*a*i}else this.target.motion.x=0,this.target.motion.z=0;if(this.keys.jump&&(0==this.motion.y||this.fallTime<this.fallTimeThreshold)&&(this.motion.y=this.jump,this.fallTime=this.fallTimeThreshold),this.falling=0!=this.motion.y,this.fallTime=this.falling?this.fallTime+e:0,this.keys.noclip&&(this.keys.noclip=!1,this.keyboard.release("x"),this.noclip=0==this.noclip),this.noclip){if(this.falling=!1,this.keys.up||this.keys.down){var r=(this.keys.up?1:0)+(this.keys.down?-1:0);this.target.motion.y=Math.sin(this.target.rotation.pitch)*r*this.noclipSpeed}else this.target.motion.y=0;this.motion.y=this.target.motion.y}this.falling?(this.motion.x=(0,o.Blend)(this.motion.x,this.target.motion.x,this.jumpSpeedMultiplier),this.motion.z=(0,o.Blend)(this.motion.z,this.target.motion.z,this.jumpSpeedMultiplier)):(this.motion.x=this.target.motion.x,this.motion.z=this.target.motion.z)}},{key:"hookMouse",value:function(){var e=this;this.onDown=function(t){e.mouse.start(t,e.rotation.pitch,e.rotation.yaw)},this.onMove=function(t){!e.mouse.isActive()||e.keys.left||e.keys.right||(e.mouse.move(t),e.target.rotation.yaw=e.mouse.getYaw(),e.target.rotation.pitch=e.mouse.getPitch(e.minPitch,e.maxPitch))},this.onUp=function(t){e.mouse.stop()},this.mouse=new n.Mouse(this.domElement,this.onDown,this.onMove,this.onUp)}},{key:"update",value:function(e){this.move(e),this.noclip?(this.target.position.x+=this.motion.x*e,this.target.position.y+=this.motion.y*e,this.target.position.z+=this.motion.z*e):this.collider.move(e,this.colliderSystem),this.position.x=(0,o.Blend)(this.position.x,this.target.position.x,this.adjust.maximum),this.position.y=(0,o.Blend)(this.position.y,this.target.position.y,this.adjust.maximum),this.position.z=(0,o.Blend)(this.position.z,this.target.position.z,this.adjust.maximum),this.rotation.yaw+=(0,o.MinAngleBetween)(this.rotation.yaw,this.target.rotation.yaw)*this.adjust.fast,this.rotation.pitch=(0,o.Blend)(this.rotation.pitch,this.target.rotation.pitch,this.adjust.slow),this.group.position.set(this.position.x,this.position.y,this.position.z)}},{key:"getTargetPosition",value:function(){return this.target.position}},{key:"teleport",value:function(e){this.position.x+=e.x,this.target.position.x+=e.x,this.position.z+=e.z,this.target.position.z+=e.z}}]),e}();t.Player=s},function(e,t,a){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}(),n=function(){function e(t){var a=this;i(this,e),this.keys={},this.onEvent=t,document.addEventListener("keydown",function(e){a.onKeyDown(e)}),document.addEventListener("keyup",function(e){a.onKeyUp(e)})}return r(e,[{key:"onKeyDown",value:function(e){this.keys[e.key]=!0,this.onEvent(e.key)}},{key:"onKeyUp",value:function(e){this.keys[e.key]=!1,this.onEvent(e.key)}},{key:"release",value:function(e){this.keys[e]=!1}},{key:"isSpecial",value:function(){return this.keys.Shift||this.keys.Control||this.keys.Alt}},{key:"isControl",value:function(){return this.keys.Control}},{key:"isShift",value:function(){return this.keys.Shift}},{key:"isAlt",value:function(){return this.keys.Alt}}]),e}();t.Keyboard=n},function(e,t,a){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}(),n=function(){function e(t,a,r,n){i(this,e),this.x=0,this.y=0,this.origin=new THREE.Vector2(0,0),this.delta=new THREE.Vector2(0,0),this.rotation={pitch:0,yaw:0,roll:0},this.active=!1,this.timestamp=0,this.domElement=t,this.domElement.addEventListener("mousedown",a,!1),this.domElement.addEventListener("mousemove",r,!1),this.domElement.addEventListener("mouseup",n,!1),this.domElement.addEventListener("mouseleave",n,!1)}return r(e,[{key:"start",value:function(e,t,a){this.active=!0;var i=this.domElement.getBoundingClientRect();this.origin.x=(e.clientX-i.x)/i.width*2-1,this.origin.y=(e.clientY-i.y)/i.height*2-1,this.rotation.pitch=t||0,this.rotation.yaw=a||0,this.timestamp=(new Date).getTime()}},{key:"stop",value:function(){this.active=!1}},{key:"move",value:function(e){var t=this.domElement.getBoundingClientRect();this.x=(e.clientX-t.x)/t.width*2-1,this.y=(e.clientY-t.y)/t.height*2-1,this.delta.x=this.x-this.origin.x,this.delta.y=this.y-this.origin.y}},{key:"getPitch",value:function(e,t){var a=Math.max(e,Math.min(t,this.rotation.pitch+this.delta.y));return a!=e&&a!=t||(this.origin.y=this.y,this.rotation.pitch=a),a}},{key:"getYaw",value:function(){return this.rotation.yaw+this.delta.x}},{key:"getTimestamp",value:function(){return this.timestamp}},{key:"isActive",value:function(){return this.active}}]),e}();t.Mouse=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(e,t,a){return(t-e)*a+e},r=function(e,t){return Math.atan2(Math.sin(t-e),Math.cos(t-e))},n=function(e){return Math.random()*e-e/2},o=2*Math.PI;t.Blend=i,t.MinAngleBetween=r,t.Rand=n,t.TwoPI=o},function(e,t,a){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0}),t.Map=void 0;var r=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}(),n=a(30),o=a(36),s=a(1),l=a(38),u=function(){function e(t,a,r,o,s){i(this,e),this.scene=t,this.collider=a,this.camera=r,this.cameraWorldDirection=new THREE.Vector3,this.centreX=o/2,this.centreY=s/2,this.interactive=[],this.loader=new n.LoadOBJ("./assets/"),this.gridSize=26,this.gridThreshold=this.gridSize/2,this.polyCount=0,this.loadScene()}return r(e,[{key:"loadScene",value:function(){var e=this;this.floor=new THREE.Mesh(new THREE.BoxBufferGeometry(250,2,250),o.Materials.default.clone()),this.ceiling=new THREE.Mesh(new THREE.BoxBufferGeometry(250,1,250),o.Materials.default.clone()),this.floor.position.y=0,this.ceiling.position.y=22.4,this.scene.add(this.floor,this.ceiling),this.collider.add(this.floor);for(var t=-50;t<50;t+=8)for(var a=-50;a<50;a+=8){var i=1+2*Math.random(),r=new THREE.Mesh(new THREE.BoxBufferGeometry(3,i,3),o.Materials.default.clone());r.position.set(t,i/2-.1,a),this.collider.add(r),this.scene.add(r),this.interactive.push(r)}this.loader.load("column-culled").then(function(t){var a=0;t.children.forEach(function(e){a+=e.geometry.attributes.position.array.length/e.geometry.attributes.position.itemSize});for(var i=e.gridThreshold+3*e.gridSize,r=-i;r<=i;r+=e.gridSize)for(var n=-i;n<=i;n+=e.gridSize){var o=t.clone();o.rotation.y=(n>0?r<0?0:1:r>0?2:3)*Math.PI/2,o.position.set(r,0,n),e.scene.add(o),e.polyCount+=a}console.log("~Polygons",e.polyCount)},function(e){console.warn("Load error:",e)}),this.textNodes=[];for(var n=0;n<40;++n){var u=new l.TextNode("?",(0,s.Rand)(100),6+(0,s.Rand)(10),(0,s.Rand)(100));this.textNodes.push(u),this.scene.add(u.mesh)}}},{key:"update",value:function(e){this.camera.getWorldDirection(this.cameraWorldDirection);for(var t=0,a=this.textNodes.length;t<a;++t)this.textNodes[t].update(e,this.camera,this.cameraWorldDirection,this.centreX,this.centreY);for(var t=0,a=this.interactive.length;t<a;++t){var i=this.interactive[t];if(i.active){var r=(0,s.Blend)(i.material.emissive.r,1,.25);i.material.emissive.r=r,i.material.emissive.g=r,i.material.emissive.b=r}else{var n=(0,s.Blend)(i.material.emissive.r,0,.25);i.material.emissive.r=n,i.material.emissive.g=n,i.material.emissive.b=n}}}},{key:"resize",value:function(e,t){this.centreX=e/2,this.centreY=t/2}},{key:"getObjects2d",value:function(){return this.textNodes}},{key:"getInteractive",value:function(){return this.interactive}},{key:"getTeleport",value:function(e){return{x:e.x>this.gridThreshold?-this.gridSize:e.x<-this.gridThreshold?this.gridSize:0,z:e.z>this.gridThreshold?-this.gridSize:e.z<-this.gridThreshold?this.gridSize:0}}},{key:"teleport",value:function(e){for(var t=0,a=this.interactive.length;t<a;++t)this.interactive[t].position.x+=e.x,this.interactive[t].position.z+=e.z;for(var t=0,a=this.textNodes.length;t<a;++t)this.textNodes[t].teleport(e)}},{key:"activateObjects",value:function(e){for(var t=0,a=this.interactive.length;t<a;++t)this.interactive[t].active=!1;e.length&&(e[0].object.active=!0)}}]),e}();t.Map=u},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=a(31);Object.keys(i).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[e]}})})},function(e,t,a){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0}),t.LoadOBJ=void 0;var r=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}();a(32);var n=function(){function e(t){i(this,e),this.path=t,this.materials={},this.images={},this.materialLoader=new THREE.MTLLoader,this.objectLoader=new THREE.OBJLoader,this.textureLoader=new THREE.TextureLoader,this.bumpScale=.05,this.lightMapIntensity=1,this.envMapIntensity=.25,this.envTextureCube=(new THREE.CubeTextureLoader).load([this.path+"envmap/posx.jpg",this.path+"envmap/negx.jpg",this.path+"envmap/posy.jpg",this.path+"envmap/negy.jpg",this.path+"envmap/posz.jpg",this.path+"envmap/negz.jpg"]),this.materialLoader.setPath(this.path),this.objectLoader.setPath(this.path),this.textureLoader.setPath(this.path)}return r(e,[{key:"load",value:function(e){var t=this;return new Promise(function(a,i){try{t.materialLoader.load(e+".mtl",function(i){t.preload(e,i.materialsInfo),t.objectLoader.load(e+".obj",function(i){i.children.forEach(function(a){t.setMaterial(a,t.materials[e])}),a(i)})})}catch(e){i(e)}})}},{key:"preload",value:function(e,t){this.materials[e]={};for(var a in t)t.hasOwnProperty(a)&&this.newMaterial(e,a,t[a])}},{key:"newMaterial",value:function(e,t,a){this.materials[e][t]=new THREE.MeshPhysicalMaterial({});var i=this.materials[e][t];if(a.map_kd){var r=this.textureLoader.load(a.map_kd);i.color=new THREE.Color(1,1,1),i.map=r,-1!=a.map_kd.indexOf(".png")&&(i.transparent=!0,i.side=THREE.DoubleSide)}else i.emissive=new THREE.Color(a.ka[0],a.ka[1],a.ka[2]);if(a.bump)try{var n=a.bump.split(" "),o=this.textureLoader.load(n[0]);i.bumpScale=parseFloat(n[2])*this.bumpScale,i.bumpMap=o}catch(e){console.log("Bump map",e)}if(a.map_ka){i.requireSecondUVSet=!0;var s=this.textureLoader.load(a.map_ka);i.lightMap=s,i.lightMapIntensity=this.lightMapIntensity}i.envMap=this.envTextureCube,i.envMapIntensity=this.envMapIntensity}},{key:"setMaterial",value:function(e,t){t[e.material.name]&&(e.material=t[e.material.name],e.material.requireSecondUVSet&&e.geometry.addAttribute("uv2",new THREE.BufferAttribute(e.geometry.attributes.uv.array,2)))}}]),e}();t.LoadOBJ=n},function(e,t,a){"use strict";a(33),a(34),a(35)},function(e,t,a){"use strict";var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};!function(){function e(e){var t=new Map;if("Connections"in e)for(var a=e.Connections.properties.connections,i=0,r=a.length;i<r;++i){var n=a[i];t.has(n[0])||t.set(n[0],{parents:[],children:[]});var o={ID:n[1],relationship:n[2]};t.get(n[0]).parents.push(o),t.has(n[1])||t.set(n[1],{parents:[],children:[]});var s={ID:n[0],relationship:n[2]};t.get(n[1]).children.push(s)}return t}function t(e){var t=new Map;if("Video"in e.Objects.subNodes){var i=e.Objects.subNodes.Video;for(var r in i){if("Content"in i[r].properties){var n=a(i[r]);t.set(parseInt(r),n)}}}return t}function a(e){var t,a=e.properties.Content,i=e.properties.RelativeFilename||e.properties.Filename,r=i.slice(i.lastIndexOf(".")+1).toLowerCase();switch(r){case"bmp":t="image/bmp";break;case"jpg":case"jpeg":t="image/jpeg";break;case"png":t="image/png";break;case"tif":t="image/tiff";break;default:return void console.warn('FBXLoader: Image type "'+r+'" is not supported.')}if("string"==typeof a)return"data:"+t+";base64,"+a;var n=new Uint8Array(a);return window.URL.createObjectURL(new Blob([n],{type:t}))}function r(e,t,a,i){var r=new Map,o=["jpg","jpeg","png","bmp"];if("Texture"in e.Objects.subNodes){var s=e.Objects.subNodes.Texture;for(var l in s){var u=s[l],f=u.properties.FileName.slice(u.properties.FileName.lastIndexOf(".")+1).toLowerCase();if(-1!=o.indexOf(f)){var h=n(u,t,a,i);r.set(parseInt(l),h)}}}return r}function n(e,t,a,i){var r,n=e.id,o=e.attrName,s=e.properties.FileName,l=e.properties.RelativeFilename,u=i.get(n).children;if(void 0!==u&&u.length>0&&a.has(u[0].ID))r=a.get(u[0].ID);else if(void 0!==l&&"/"!==l[0]&&null===l.match(/^[a-zA-Z]:/))r=l;else{var f=s.split(/[\\\/]/);r=f.length>0?f[f.length-1]:s}var h=t.path;0!==r.indexOf("blob:")&&0!==r.indexOf("data:")||t.setPath(void 0);var d=t.load(r);d.name=o,d.FBX_ID=n;var c=e.properties.WrapModeU,p=e.properties.WrapModeV,m=void 0!==c?c.value:0,v=void 0!==p?p.value:0;if(d.wrapS=0===m?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,d.wrapT=0===v?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,"Scaling"in e.properties){var g=e.properties.Scaling.value;d.repeat.x=g[0],d.repeat.y=g[1]}return t.setPath(h),d}function o(e,t,a){var i=new Map;if("Material"in e.Objects.subNodes){var r=e.Objects.subNodes.Material;for(var n in r){var o=s(r[n],t,a);null!==o&&i.set(parseInt(n),o)}}return i}function s(e,t,a){var r=e.id,n=e.attrName,o=e.properties.ShadingModel;if("object"===(void 0===o?"undefined":i(o))&&(o=o.value),!a.has(r))return null;var s,u=a.get(r).children,f=l(e.properties,t,u);switch(o.toLowerCase()){case"phong":s=new THREE.MeshPhongMaterial;break;case"lambert":s=new THREE.MeshLambertMaterial;break;case"unknown":s=new THREE.MeshStandardMaterial;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',o),s=new THREE.MeshPhongMaterial({color:3342591})}return s.setValues(f),s.name=n,s}function l(e,t,a){var i={};if(e.BumpFactor&&(i.bumpScale=e.BumpFactor.value),e.Diffuse&&(i.color=B(e.Diffuse)),e.DisplacementFactor&&(i.displacementScale=e.DisplacementFactor.value),e.ReflectionFactor&&(i.reflectivity=e.ReflectionFactor.value),e.Specular&&(i.specular=B(e.Specular)),e.Shininess&&(i.shininess=e.Shininess.value),e.Emissive&&(i.emissive=B(e.Emissive)),e.EmissiveFactor&&(i.emissiveIntensity=parseFloat(e.EmissiveFactor.value)),e.Opacity&&(i.opacity=parseFloat(e.Opacity.value)),i.opacity<1&&(i.transparent=!0),e["Maya|base_color"]){var r=e["Maya|base_color"].value;i.color=new THREE.Color(r[0],r[1],r[2])}if(e["Maya|emissive"]){var r=e["Maya|emissive"];i.emissive=new THREE.Color(r[0],r[1],r[2])}e["Maya|emissive_intensity"]&&(i.emissiveIntensity=e["Maya|emissive_intensity"].value),e["Maya|metallic"]&&(i.metalness=e["Maya|metallic"].value),e["Maya|roughness"]&&(i.roughness=e["Maya|roughness"].value);var n=1;if(e["Maya|uv_scale"])var n=e["Maya|uv_scale"].value;for(var o=0,s=a.length;o<s;++o){var l=a[o],u=l.relationship;switch(u){case"Maya|TEX_color_map":var f="Maya|use_color_map";e[f]&&1==e[f].value&&(i.map=t.get(l.ID),1!=n&&(i.map.wrapS=THREE.RepeatWrapping,i.map.wrapT=THREE.RepeatWrapping,i.map.repeat.set(n,n)));break;case"Maya|TEX_emissive_map":var f="Maya|use_emissive_map";e[f]&&1==e[f].value&&(i.emissiveMap=t.get(l.ID),1!=n&&(i.emissiveMap.wrapS=THREE.RepeatWrapping,i.emissiveMap.wrapT=THREE.RepeatWrapping,i.emissiveMap.repeat.set(n,n)));break;case"Maya|TEX_roughness_map":var f="Maya|use_roughness_map";e[f]&&1==e[f].value&&(i.roughnessMap=t.get(l.ID),1!=n&&(i.roughnessMap.wrapS=THREE.RepeatWrapping,i.roughnessMap.wrapT=THREE.RepeatWrapping,i.roughnessMap.repeat.set(n,n)));break;case"Maya|TEX_normal_map":var f="Maya|use_normal_map";e[f]&&1==e[f].value&&(i.normalMap=t.get(l.ID),1!=n&&(i.normalMap.wrapS=THREE.RepeatWrapping,i.normalMap.wrapT=THREE.RepeatWrapping,i.normalMap.repeat.set(n,n)));break;case"Maya|TEX_metallic_map":var f="Maya|use_metallic_map";e[f]&&1==e[f].value&&(i.metalnessMap=t.get(l.ID),1!=n&&(i.metalnessMap.wrapS=THREE.RepeatWrapping,i.metalnessMap.wrapT=THREE.RepeatWrapping,i.metalnessMap.repeat.set(n,n)));break;case"Maya|TEX_ao_map":var f="Maya|use_ao_map";e[f]&&1==e[f].value&&(i.aoMap=t.get(l.ID),1!=n&&(i.aoMap.wrapS=THREE.RepeatWrapping,i.aoMap.wrapT=THREE.RepeatWrapping,i.aoMap.repeat.set(n,n)));break;case"Maya|TEX_brdf_lut":case"Maya|TEX_global_specular_cube":case"Maya|TEX_global_diffuse_cube":break;case"Bump":i.bumpMap=t.get(l.ID);break;case"DiffuseColor":i.map=t.get(l.ID);break;case"DisplacementColor":i.displacementMap=t.get(l.ID);break;case"EmissiveColor":i.emissiveMap=t.get(l.ID);break;case"NormalMap":i.normalMap=t.get(l.ID);break;case"ReflectionColor":i.envMap=t.get(l.ID),i.envMap.mapping=THREE.EquirectangularReflectionMapping;break;case"SpecularColor":i.specularMap=t.get(l.ID);break;case"TransparentColor":i.alphaMap=t.get(l.ID),i.transparent=!0;break;case"AmbientColor":case"ShininessExponent":case"SpecularFactor":case"VectorDisplacementColor":default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",u)}}return i}function u(e,t){var a={};if("Deformer"in e.Objects.subNodes){var i=e.Objects.subNodes.Deformer;for(var r in i){if("Skin"===i[r].attrType){var n=t.get(parseInt(r)),o=f(n,i);o.FBX_ID=parseInt(r),a[r]=o}}}return a}function f(e,t){for(var a={},i=e.children,r=0,n=i.length;r<n;++r){var o=i[r],s=t[o.ID],l={FBX_ID:o.ID,index:r,indices:[],weights:[],transform:(new THREE.Matrix4).fromArray(s.subNodes.Transform.properties.a),transformLink:(new THREE.Matrix4).fromArray(s.subNodes.TransformLink.properties.a),linkMode:s.properties.Mode};"Indexes"in s.subNodes&&(l.indices=s.subNodes.Indexes.properties.a,l.weights=s.subNodes.Weights.properties.a),a[o.ID]=l}return{map:a,bones:[]}}function h(e,t,a){var i=new Map;if("Geometry"in e.Objects.subNodes){var r=e.Objects.subNodes.Geometry;for(var n in r){var o=t.get(parseInt(n)),s=d(r[n],o,a);i.set(parseInt(n),s)}}return i}function d(e,t,a){switch(e.attrType){case"Mesh":return c(e,t,a);case"NurbsCurve":return T(e)}}function c(e,t,a){for(var i=0;i<t.children.length;++i){var r=a[t.children[i].ID];if(void 0!==r)break}return p(e,r)}function p(e,t){var a=e.subNodes,i=a.Vertices.properties.a,r=a.PolygonVertexIndex.properties.a,n=[],o=[],s=[],l=[],u=[],f=[],h=[];if(a.LayerElementColor)var d=g(a.LayerElementColor[0]);if(a.LayerElementMaterial)var c=A(a.LayerElementMaterial[0]);if(a.LayerElementNormal)var p=m(a.LayerElementNormal[0]);if(a.LayerElementUV)for(var T=[],x=0;a.LayerElementUV[x];)T.push(v(a.LayerElementUV[x])),x++;var F={};if(t){var y=t.map;for(var _ in y)for(var P=y[_],b=P.indices,L=0;L<b.length;L++){var S=b[L],w=P.weights[L];void 0===F[S]&&(F[S]=[]),F[S].push({id:P.index,weight:w})}}for(var N=0,R=0,I=!1,M=[],U=[],H=[],X=[],O=[],C=[],k=0;k<r.length;k++){var D=r[k],Q=!1;D<0&&(D^=-1,r[k]=D,Q=!0);var Y=[],B=[];if(M.push(3*D,3*D+1,3*D+2),d){var j=E(k,N,D,d);H.push(j[0],j[1],j[2])}if(t){if(void 0!==F[D])for(var z=F[D],L=0,G=z.length;L<G;L++)B.push(z[L].weight),Y.push(z[L].id);if(B.length>4){I||(console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."),I=!0);var V=[0,0,0,0],W=[0,0,0,0];B.forEach(function(e,t){var a=e,i=Y[t];W.forEach(function(e,t,r){if(a>e){r[t]=a,a=e;var n=V[t];V[t]=i,i=n}})}),Y=V,B=W}for(var x=B.length;x<4;++x)B[x]=0,Y[x]=0;for(var x=0;x<4;++x)O.push(B[x]),C.push(Y[x])}if(p){var j=E(k,N,D,p);U.push(j[0],j[1],j[2])}if(T)for(var x=0;x<T.length;x++){var j=E(k,N,D,T[x]);void 0===X[x]&&(X[x]=[]),X[x].push(j[0],j[1])}if(R++,Q){for(var x=2;x<R;x++)n.push(i[M[0]]),n.push(i[M[1]]),n.push(i[M[2]]),n.push(i[M[3*(x-1)]]),n.push(i[M[3*(x-1)+1]]),n.push(i[M[3*(x-1)+2]]),n.push(i[M[3*x]]),n.push(i[M[3*x+1]]),n.push(i[M[3*x+2]]);if(t)for(var x=2;x<R;x++)f.push(O[0]),f.push(O[1]),f.push(O[2]),f.push(O[3]),f.push(O[4*(x-1)]),f.push(O[4*(x-1)+1]),f.push(O[4*(x-1)+2]),f.push(O[4*(x-1)+3]),f.push(O[4*x]),f.push(O[4*x+1]),f.push(O[4*x+2]),f.push(O[4*x+3]),h.push(C[0]),h.push(C[1]),h.push(C[2]),h.push(C[3]),h.push(C[4*(x-1)]),h.push(C[4*(x-1)+1]),h.push(C[4*(x-1)+2]),h.push(C[4*(x-1)+3]),h.push(C[4*x]),h.push(C[4*x+1]),h.push(C[4*x+2]),h.push(C[4*x+3]);if(p)for(var x=2;x<R;x++)o.push(U[0]),o.push(U[1]),o.push(U[2]),o.push(U[3*(x-1)]),o.push(U[3*(x-1)+1]),o.push(U[3*(x-1)+2]),o.push(U[3*x]),o.push(U[3*x+1]),o.push(U[3*x+2]);if(T)for(var L=0;L<T.length;L++){void 0===l[L]&&(l[L]=[]);for(var x=2;x<R;x++)l[L].push(X[L][0]),l[L].push(X[L][1]),l[L].push(X[L][2*(x-1)]),l[L].push(X[L][2*(x-1)+1]),l[L].push(X[L][2*x]),l[L].push(X[L][2*x+1])}if(d)for(var x=2;x<R;x++)s.push(H[0]),s.push(H[1]),s.push(H[2]),s.push(H[3*(x-1)]),s.push(H[3*(x-1)+1]),s.push(H[3*(x-1)+2]),s.push(H[3*x]),s.push(H[3*x+1]),s.push(H[3*x+2]);if(c&&"AllSame"!==c.mappingType)for(var q=E(k,N,D,c)[0],x=2;x<R;x++)u.push(q),u.push(q),u.push(q);N++,Q=!1,R=0,M=[],U=[],H=[],X=[],O=[],C=[]}}var K=new THREE.BufferGeometry;if(K.name=e.name,K.addAttribute("position",new THREE.Float32BufferAttribute(n,3)),s.length>0&&K.addAttribute("color",new THREE.Float32BufferAttribute(s,3)),t&&(K.addAttribute("skinIndex",new THREE.Float32BufferAttribute(h,4)),K.addAttribute("skinWeight",new THREE.Float32BufferAttribute(f,4)),K.FBX_Deformer=t),o.length>0&&K.addAttribute("normal",new THREE.Float32BufferAttribute(o,3)),l.length>0)for(var x=0;x<l.length;x++){var Z="uv"+(x+1).toString();0==x&&(Z="uv"),K.addAttribute(Z,new THREE.Float32BufferAttribute(l[x],2))}if(c&&"AllSame"!==c.mappingType){for(var $=u[0],J=0,x=0;x<u.length;++x)u[x]!==$&&(K.addGroup(J,x-J,$),$=u[x],J=x);if(K.groups.length>0){var ee=K.groups[K.groups.length-1],te=ee.start+ee.count;te!==u.length&&K.addGroup(te,u.length-te,$)}0===K.groups.length&&K.addGroup(0,u.length,u[0])}return K}function m(e){var t=e.properties.MappingInformationType,a=e.properties.ReferenceInformationType,i=e.subNodes.Normals.properties.a,r=[];return"IndexToDirect"===a&&("NormalIndex"in e.subNodes?r=e.subNodes.NormalIndex.properties.a:"NormalsIndex"in e.subNodes&&(r=e.subNodes.NormalsIndex.properties.a)),{dataSize:3,buffer:i,indices:r,mappingType:t,referenceType:a}}function v(e){var t=e.properties.MappingInformationType,a=e.properties.ReferenceInformationType,i=e.subNodes.UV.properties.a,r=[];return"IndexToDirect"===a&&(r=e.subNodes.UVIndex.properties.a),{dataSize:2,buffer:i,indices:r,mappingType:t,referenceType:a}}function g(e){var t=e.properties.MappingInformationType,a=e.properties.ReferenceInformationType,i=e.subNodes.Colors.properties.a,r=[];return"IndexToDirect"===a&&(r=e.subNodes.ColorIndex.properties.a),{dataSize:4,buffer:i,indices:r,mappingType:t,referenceType:a}}function A(e){var t=e.properties.MappingInformationType,a=e.properties.ReferenceInformationType;if("NoMappingInformation"===t)return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:a};for(var i=e.subNodes.Materials.properties.a,r=[],n=0,o=i.length;n<o;++n)r.push(n);return{dataSize:1,buffer:i,indices:r,mappingType:t,referenceType:a}}function E(e,t,a,i){return q[i.mappingType][i.referenceType](e,t,a,i)}function T(e){if(void 0===THREE.NURBSCurve)return console.error("THREE.FBXLoader: The loader relies on THREE.NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry."),new THREE.BufferGeometry;var t=parseInt(e.properties.Order);if(isNaN(t))return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",e.properties.Order,e.id),new THREE.BufferGeometry;for(var a=t-1,i=e.subNodes.KnotVector.properties.a,r=[],n=e.subNodes.Points.properties.a,o=0,s=n.length;o<s;o+=4)r.push((new THREE.Vector4).fromArray(n,o));var l,u;if("Closed"===e.properties.Form)r.push(r[0]);else if("Periodic"===e.properties.Form){l=a,u=i.length-1-l;for(var o=0;o<a;++o)r.push(r[o])}for(var f=new THREE.NURBSCurve(a,i,r,l,u),h=f.getPoints(7*r.length),d=new Float32Array(3*h.length),o=0,s=h.length;o<s;++o)h[o].toArray(d,3*o);var c=new THREE.BufferGeometry;return c.addAttribute("position",new THREE.BufferAttribute(d,3)),c}function x(e,t,a,i,r){var n=new THREE.Group,o=e.Objects.subNodes.Model,s=[],l=new Map;for(var u in o){for(var f=parseInt(u),h=o[u],d=t.get(f),c=null,p=0;p<d.parents.length;++p)for(var m in a){var v=a[m],g=v.map,A=g[d.parents[p].ID];if(A){var E=c;c=new THREE.Bone,v.bones[A.index]=c,null!==E&&c.add(E)}}if(!c)switch(h.attrType){case"Camera":for(var T,x=0,y=d.children.length;x<y;++x){var _=d.children[x].ID,P=e.Objects.subNodes.NodeAttribute[_];void 0!==P&&void 0!==P.properties&&(T=P.properties)}if(void 0===T)c=new THREE.Object3D;else{var b=0;void 0!==T.CameraProjectionType&&1===T.CameraProjectionType.value&&(b=1);var L=1;void 0!==T.NearPlane&&(L=T.NearPlane.value/1e3);var w=1e3;void 0!==T.FarPlane&&(w=T.FarPlane.value/1e3);var N=window.innerWidth,R=window.innerHeight;void 0!==T.AspectWidth&&void 0!==T.AspectHeight&&(N=T.AspectWidth.value,R=T.AspectHeight.value);var I=N/R,M=45;switch(void 0!==T.FieldOfView&&(M=T.FieldOfView.value),b){case 0:c=new THREE.PerspectiveCamera(M,I,L,w);break;case 1:c=new THREE.OrthographicCamera(-N/2,N/2,R/2,-R/2,L,w);break;default:console.warn("THREE.FBXLoader: Unknown camera type "+b+"."),c=new THREE.Object3D}}break;case"Light":for(var U,x=0,y=d.children.length;x<y;++x){var _=d.children[x].ID,P=e.Objects.subNodes.NodeAttribute[_];void 0!==P&&void 0!==P.properties&&(U=P.properties)}if(void 0===U)c=new THREE.Object3D;else{var b;b=void 0===U.LightType?0:U.LightType.value;var H=16777215;void 0!==U.Color&&(H=B(U.Color.value));var X=void 0===U.Intensity?1:U.Intensity.value/100;void 0!==U.CastLightOnObject&&0===U.CastLightOnObject.value&&(X=0);var O=0;void 0!==U.FarAttenuationEnd&&(O=void 0!==U.EnableFarAttenuation&&0===U.EnableFarAttenuation.value?0:U.FarAttenuationEnd.value/1e3);switch(b){case 0:c=new THREE.PointLight(H,X,O,1);break;case 1:c=new THREE.DirectionalLight(H,X);break;case 2:var C=Math.PI/3;void 0!==U.InnerAngle&&(C=THREE.Math.degToRad(U.InnerAngle.value));var k=0;void 0!==U.OuterAngle&&(k=THREE.Math.degToRad(U.OuterAngle.value),k=Math.max(k,1)),c=new THREE.SpotLight(H,X,O,C,k,1);break;default:console.warn("THREE.FBXLoader: Unknown light type "+U.LightType.value+", defaulting to a THREE.PointLight."),c=new THREE.PointLight(H,X)}void 0!==U.CastShadows&&1===U.CastShadows.value&&(c.castShadow=!0)}break;case"Mesh":for(var D=null,Q=null,Y=[],x=0,y=d.children.length;x<y;++x){var j=d.children[x];i.has(j.ID)&&(D=i.get(j.ID)),r.has(j.ID)&&Y.push(r.get(j.ID))}if(Y.length>1?Q=Y:Y.length>0?Q=Y[0]:(Q=new THREE.MeshPhongMaterial({color:13421772}),Y.push(Q)),"color"in D.attributes)for(var G=0,V=Y.length;G<V;++G)Y[G].vertexColors=THREE.VertexColors;if(D.FBX_Deformer){for(var W=0,q=Y.length;W<q;++W)Y[W].skinning=!0;c=new THREE.SkinnedMesh(D,Q)}else c=new THREE.Mesh(D,Q);break;case"NurbsCurve":for(var D=null,x=0,y=d.children.length;x<y;++x){var j=d.children[x];i.has(j.ID)&&(D=i.get(j.ID))}Q=new THREE.LineBasicMaterial({color:3342591,linewidth:5}),c=new THREE.Line(D,Q);break;default:c=new THREE.Group}c.name=THREE.PropertyBinding.sanitizeNodeName(h.attrName),c.FBX_ID=f,s.push(c),l.set(f,c)}for(var K=0,Z=s.length;K<Z;++K){var c=s[K],h=o[c.FBX_ID];if("Lcl_Translation"in h.properties&&c.position.fromArray(h.properties.Lcl_Translation.value),"Lcl_Rotation"in h.properties){var $=h.properties.Lcl_Rotation.value.map(THREE.Math.degToRad);$.push("ZYX"),c.rotation.fromArray($)}if("Lcl_Scaling"in h.properties&&c.scale.fromArray(h.properties.Lcl_Scaling.value),"PreRotation"in h.properties){var J=h.properties.PreRotation.value.map(THREE.Math.degToRad);J[3]="ZYX";var ee=(new THREE.Euler).fromArray(J);ee=(new THREE.Quaternion).setFromEuler(ee);var te=(new THREE.Quaternion).setFromEuler(c.rotation);ee.multiply(te),c.rotation.setFromQuaternion(ee,"ZYX")}if("GeometricTranslation"in h.properties){var J=h.properties.GeometricTranslation.value;c.traverse(function(e){e.geometry&&e.geometry.translate(J[0],J[1],J[2])})}if("LookAtProperty"in h.properties)for(var d=t.get(c.FBX_ID),x=0,y=d.children.length;x<y;++x){var j=d.children[x];if("LookAtProperty"===j.relationship){var ae=e.Objects.subNodes.Model[j.ID];if("Lcl_Translation"in ae.properties){var ie=ae.properties.Lcl_Translation.value;void 0!==c.target?(c.target.position.set(ie[0],ie[1],ie[2]),n.add(c.target)):c.lookAt(new THREE.Vector3(ie[0],ie[1],ie[2]))}}}for(var d=t.get(c.FBX_ID),re=0;re<d.parents.length;re++){var ne=z(s,function(e){return e.FBX_ID===d.parents[re].ID});if(ne>-1){s[ne].add(c);break}}null===c.parent&&n.add(c)}n.updateMatrixWorld(!0);var oe=new Map;if("Pose"in e.Objects.subNodes){var se=e.Objects.subNodes.Pose;for(var u in se)if("BindPose"===se[u].attrType){se=se[u];break}for(var le=se.subNodes.PoseNode,ue=0,fe=le.length;ue<fe;++ue){var h=le[ue],he=(new THREE.Matrix4).fromArray(h.subNodes.Matrix.properties.a);oe.set(parseInt(h.properties.Node),he)}}for(var m in a){var v=a[m],g=v.map;for(var de in g){var A=g[de],ce=A.index,pe=v.bones[ce];if(!oe.has(pe.FBX_ID))break;var me=oe.get(pe.FBX_ID);pe.matrixWorld.copy(me)}v.skeleton=new THREE.Skeleton(v.bones);for(var d=t.get(v.FBX_ID),ve=d.parents,ge=0,Ae=ve.length;ge<Ae;++ge){var Ee=ve[ge];if(i.has(Ee.ID))for(var Te=Ee.ID,xe=t.get(Te),p=0;p<xe.parents.length;++p)if(l.has(xe.parents[p].ID)){var c=l.get(xe.parents[p].ID);c.bind(v.skeleton,c.matrixWorld);break}}}if(n.updateMatrixWorld(!0),n.skeleton={bones:s},S(n,F(e,t,n)),"GlobalSettings"in e&&"AmbientColor"in e.GlobalSettings.properties){var Fe=e.GlobalSettings.properties.AmbientColor.value,ye=Fe[0],_e=Fe[1],Pe=Fe[2];if(0!==ye||0!==_e||0!==Pe){var H=new THREE.Color(ye,_e,Pe);n.add(new THREE.AmbientLight(H,1))}}return n}function F(e,t,a){var i=e.Objects.subNodes.AnimationCurveNode,r=e.Objects.subNodes.AnimationCurve,n=e.Objects.subNodes.AnimationLayer,o=e.Objects.subNodes.AnimationStack,s=30;if("GlobalSettings"in e&&"TimeMode"in e.GlobalSettings.properties){var l=[30,120,100,60,50,48,30,30,29.97,29.97,25,24,1,23.976,30,96,72,59.94],u=e.GlobalSettings.properties.TimeMode.value;14===u?"CustomFrameRate"in e.GlobalSettings.properties&&(s=e.GlobalSettings.properties.CustomFrameRate.value,s=-1===s?30:s):u<=17&&(s=l[u])}var f={curves:new Map,layers:{},stacks:{},length:0,fps:s,frames:0},h=[];for(var d in i)if(d.match(/\d+/)){var c=y(e,i[d],t,a);h.push(c)}for(var p=new Map,m=0;m<h.length;++m)null!==h[m]&&p.set(h[m].id,h[m]);var v=[];for(d in r)if(d.match(/\d+/)){var g=_(r[d]);if(!t.has(g.id))continue;v.push(g);var A=t.get(g.id).parents[0],E=A.ID,T=A.relationship,x="";if(T.match(/X/))x="x";else if(T.match(/Y/))x="y";else{if(!T.match(/Z/))continue;x="z"}p.get(E).curves[x]=g}p.forEach(function(e){var t=e.containerBoneID;if(f.curves.has(t)||f.curves.set(t,{T:null,R:null,S:null}),f.curves.get(t)[e.attr]=e,"R"===e.attr){var a=e.curves;if(null===a.x&&(a.x={version:null,times:[0],values:[0]}),null===a.y&&(a.y={version:null,times:[0],values:[0]}),null===a.z&&(a.z={version:null,times:[0],values:[0]}),a.x.values=a.x.values.map(THREE.Math.degToRad),a.y.values=a.y.values.map(THREE.Math.degToRad),a.z.values=a.z.values.map(THREE.Math.degToRad),null!==e.preRotations){var i=(new THREE.Euler).setFromVector3(e.preRotations,"ZYX");i=(new THREE.Quaternion).setFromEuler(i);for(var r=new THREE.Euler,n=new THREE.Quaternion,o=0;o<a.x.times.length;++o)r.set(a.x.values[o],a.y.values[o],a.z.values[o],"ZYX"),n.setFromEuler(r).premultiply(i),r.setFromQuaternion(n,"ZYX"),a.x.values[o]=r.x,a.y.values[o]=r.y,a.z.values[o]=r.z}}});for(var d in n){for(var F=[],b=t.get(parseInt(d)).children,L=0;L<b.length;L++)if(p.has(b[L].ID)){var S=p.get(b[L].ID),w=S.containerBoneID;void 0===F[w]&&(F[w]={T:null,R:null,S:null}),F[w][S.attr]=S}f.layers[d]=F}for(var d in o){for(var N=[],b=t.get(parseInt(d)).children,R={max:0,min:Number.MAX_VALUE},L=0;L<b.length;++L){var I=f.layers[b[L].ID];if(void 0!==I){N.push(I);for(var M=0,U=I.length;M<U;++M){var F=I[M];F&&P(F,R)}}}R.max>R.min&&(f.stacks[d]={name:o[d].attrName,layers:N,length:R.max-R.min,frames:(R.max-R.min)*f.fps})}return f}function y(e,t,a,i){var r=e.Objects.subNodes.Model,n={id:t.id,attr:t.attrName,internalID:t.id,attrX:!1,attrY:!1,attrZ:!1,containerBoneID:-1,containerID:-1,curves:{x:null,y:null,z:null},preRotations:null};if(!n.attr.match(/S|R|T/))return null;for(var o in t.properties)o.match(/X/)&&(n.attrX=!0),o.match(/Y/)&&(n.attrY=!0),o.match(/Z/)&&(n.attrZ=!0);for(var s=a.get(n.id),l=s.parents,u=l.length-1;u>=0;--u){var f=z(i.skeleton.bones,function(e){return e.FBX_ID===l[u].ID});if(f>-1){n.containerBoneID=f,n.containerID=l[u].ID;var h=r[n.containerID.toString()];"PreRotation"in h.properties&&(n.preRotations=Y(h.properties.PreRotation).multiplyScalar(Math.PI/180));break}}return n}function _(e){return{version:null,id:e.id,internalID:e.id,times:e.subNodes.KeyTime.properties.a.map(D),values:e.subNodes.KeyValueFloat.properties.a,attrFlag:e.subNodes.KeyAttrFlags.properties.a,attrData:e.subNodes.KeyAttrDataFloat.properties.a}}function P(e,t){e.R&&b(e.R.curves,t),e.S&&b(e.S.curves,t),e.T&&b(e.T.curves,t)}function b(e,t){e.x&&L(e.x,t),e.y&&L(e.y,t),e.z&&L(e.z,t)}function L(e,t){t.max=e.times[e.times.length-1]>t.max?e.times[e.times.length-1]:t.max,t.min=e.times[0]<t.min?e.times[0]:t.min}function S(e,t){void 0===e.animations&&(e.animations=[]);var a=t.stacks;for(var i in a){for(var r=a[i],n={name:r.name,fps:t.fps,length:r.length,hierarchy:[]},o=e.skeleton.bones,s=0,l=o.length;s<l;++s){var u=o[s],f=u.name.replace(/.*:/,""),h=z(o,function(e){return u.parent===e});n.hierarchy.push({parent:h,name:f,keys:[]})}for(var d=0;d<=r.frames;d++)for(var s=0,l=o.length;s<l;++s)for(var u=o[s],c=s,p=r.layers[0][c],m=0,v=n.hierarchy.length;m<v;++m){var g=n.hierarchy[m];g.name===u.name&&g.keys.push(w(t,p,u,d))}e.animations.push(THREE.AnimationClip.parseAnimation(n,o))}}function w(e,t,a,i){var r={time:i/e.fps,pos:a.position.toArray(),rot:a.quaternion.toArray(),scl:a.scale.toArray()};if(void 0===t)return r;K.setFromQuaternion(a.quaternion,"ZYX",!1);try{N(t,"T")&&R(t.T,i)&&(t.T.curves.x.values[i]&&(r.pos[0]=t.T.curves.x.values[i]),t.T.curves.y.values[i]&&(r.pos[1]=t.T.curves.y.values[i]),t.T.curves.z.values[i]&&(r.pos[2]=t.T.curves.z.values[i])),N(t,"R")&&R(t.R,i)&&(t.R.curves.x.values[i]&&(K.x=t.R.curves.x.values[i]),t.R.curves.y.values[i]&&(K.y=t.R.curves.y.values[i]),t.R.curves.z.values[i]&&(K.z=t.R.curves.z.values[i]),Z.setFromEuler(K),r.rot=Z.toArray()),N(t,"S")&&R(t.S,i)&&(t.T.curves.x.values[i]&&(r.scl[0]=t.S.curves.x.values[i]),t.T.curves.y.values[i]&&(r.scl[1]=t.S.curves.y.values[i]),t.T.curves.z.values[i]&&(r.scl[2]=t.S.curves.z.values[i]))}catch(e){console.log("THREE.FBXLoader: ",a),console.log("THREE.FBXLoader: ",e)}return r}function N(e,t){if(void 0===e)return!1;var a=e[t];return!!a&&$.every(function(e){return null!==a.curves[e]})}function R(e,t){return $.every(function(a){return I(e.curves[a],t)})}function I(e,t){return void 0!==e.values[t]}function M(){}function U(){}function H(e,t){this.dv=new DataView(e),this.offset=0,this.littleEndian=void 0===t||t}function X(){}function O(e){var t="Kaydara FBX Binary  \0";return e.byteLength>=t.length&&t===j(e,0,t.length)}function C(e){for(var t=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"],a=0,i=0;i<t.length;++i){if(function(t){var i=e[t-1];return e=e.slice(a+t),a++,i}(1)===t[i])return!1}return!0}function k(e){var t=/FBXVersion: (\d+)/,a=e.match(t);if(a){return parseInt(a[1])}throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function D(e){return e/46186158e3}function Q(e){for(var t=e.split(","),a=0,i=t.length;a<i;a++)t[a]=parseFloat(t[a]);return t}function Y(e){return(new THREE.Vector3).fromArray(e.value)}function B(e){return(new THREE.Color).fromArray(e.value)}function j(e,t,a){void 0===t&&(t=0),void 0===a&&(a=e.byteLength);var i=new Uint8Array(e,t,a);if(void 0!==window.TextDecoder)return(new TextDecoder).decode(i);for(var r="",n=0,o=i.length;n<o;n++)r+=String.fromCharCode(i[n]);return r}function z(e,t){for(var a=0,i=e.length;a<i;a++)if(t(e[a]))return a;return-1}function G(e,t){for(var a=0,i=e.length,r=t.length;a<r;a++,i++)e[i]=t[a]}function V(e,t,a,i){for(var r=a,n=0;r<i;r++,n++)e[n]=t[r];return e}THREE.FBXLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},Object.assign(THREE.FBXLoader.prototype,{load:function(e,t,a,i){var r=this,n=THREE.LoaderUtils.extractUrlBase(e),o=new THREE.FileLoader(this.manager);o.setResponseType("arraybuffer"),o.load(e,function(a){try{var o=r.parse(a,n);t(o)}catch(t){window.setTimeout(function(){i&&i(t),r.manager.itemError(e)},0)}},a,i)},parse:function(a,i){var n;if(O(a))n=(new U).parse(a);else{var s=j(a);if(!C(s))throw new Error("THREE.FBXLoader: Unknown format.");if(k(s)<7e3)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+k(s));n=(new M).parse(s)}var l=e(n),f=t(n),d=r(n,new THREE.TextureLoader(this.manager).setPath(i),f,l),c=o(n,d,l),p=u(n,l);return x(n,l,p,h(n,l,p),c)}});var W=[],q={ByPolygonVertex:{Direct:function(e,t,a,i){var r=e*i.dataSize,n=e*i.dataSize+i.dataSize;return V(W,i.buffer,r,n)},IndexToDirect:function(e,t,a,i){var r=i.indices[e],n=r*i.dataSize,o=r*i.dataSize+i.dataSize;return V(W,i.buffer,n,o)}},ByPolygon:{Direct:function(e,t,a,i){var r=t*i.dataSize,n=t*i.dataSize+i.dataSize;return V(W,i.buffer,r,n)},IndexToDirect:function(e,t,a,i){var r=i.indices[t],n=r*i.dataSize,o=r*i.dataSize+i.dataSize;return V(W,i.buffer,n,o)}},ByVertice:{Direct:function(e,t,a,i){var r=a*i.dataSize,n=a*i.dataSize+i.dataSize;return V(W,i.buffer,r,n)}},AllSame:{IndexToDirect:function(e,t,a,i){var r=i.indices[0]*i.dataSize,n=i.indices[0]*i.dataSize+i.dataSize;return V(W,i.buffer,r,n)}}},K=new THREE.Euler,Z=new THREE.Quaternion,$=["x","y","z"];Object.assign(M.prototype,{getPrevNode:function(){return this.nodeStack[this.currentIndent-2]},getCurrentNode:function(){return this.nodeStack[this.currentIndent-1]},getCurrentProp:function(){return this.currentProp},pushStack:function(e){this.nodeStack.push(e),this.currentIndent+=1},popStack:function(){this.nodeStack.pop(),this.currentIndent-=1},setCurrentProp:function(e,t){this.currentProp=e,this.currentPropName=t},parse:function(e){this.currentIndent=0,this.allNodes=new X,this.nodeStack=[],this.currentProp=[],this.currentPropName="";for(var t=e.split("\n"),a=0,i=t.length;a<i;a++){var r=t[a];if(!r.match(/^[\s\t]*;/)&&!r.match(/^[\s\t]*$/)){var n=new RegExp("^\\t{"+this.currentIndent+"}(\\w+):(.*){",""),o=r.match(n);if(o){for(var s=o[1].trim().replace(/^"/,"").replace(/"$/,""),l=o[2].split(","),u=0,r=l.length;u<r;u++)l[u]=l[u].trim().replace(/^"/,"").replace(/"$/,"");this.parseNodeBegin(r,s,l||null)}else{var f=new RegExp("^\\t{"+this.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)"),o=r.match(f);if(o){var h=o[1].replace(/^"/,"").replace(/"$/,"").trim(),d=o[2].replace(/^"/,"").replace(/"$/,"").trim();"Content"===h&&","===d&&(d=t[++a].replace(/"/g,"").replace(/,$/,"").trim()),this.parseNodeProperty(r,h,d)}else{var c=new RegExp("^\\t{"+(this.currentIndent-1)+"}}");r.match(c)?this.nodeEnd():r.match(/^[^\s\t}]/)&&this.parseNodePropertyContinued(r)}}}}return this.allNodes},parseNodeBegin:function(e,t,a){var i={name:t,properties:{},subNodes:{}},r=this.parseNodeAttr(a),n=this.getCurrentNode();if(0===this.currentIndent)this.allNodes.add(t,i);else if(t in n.subNodes){var o=n.subNodes[t];this.isFlattenNode(n.subNodes[t])&&(""===r.id?(n.subNodes[t]=[],n.subNodes[t].push(o)):(n.subNodes[t]={},n.subNodes[t][o.id]=o)),""===r.id?n.subNodes[t].push(i):n.subNodes[t][r.id]=i}else"number"==typeof r.id||r.id.match(/^\d+$/)?(n.subNodes[t]={},n.subNodes[t][r.id]=i):n.subNodes[t]=i;a&&(i.id=r.id,i.attrName=r.name,i.attrType=r.type),this.pushStack(i)},parseNodeAttr:function(e){var t=e[0];""!==e[0]&&(t=parseInt(e[0]),isNaN(t)&&(t=e[0]));var a="",i="";return e.length>1&&(a=e[1].replace(/^(\w+)::/,""),i=e[2]),{id:t,name:a,type:i}},parseNodeProperty:function(e,t,a){var i=this.getCurrentNode(),r=i.name;if(void 0!==r){if(r.match(/Properties(\d)+/))return void this.parseNodeSpecialProperty(e,t,a)}if("C"===t){var n=a.split(",").slice(1),o=parseInt(n[0]),s=parseInt(n[1]),l=a.split(",").slice(3);l=l.map(function(e){return e.trim().replace(/^"/,"")}),t="connections",a=[o,s],G(a,l),void 0===i.properties[t]&&(i.properties[t]=[])}if("Node"===t){var u=parseInt(a);i.properties.id=u,i.id=u}t in i.properties?Array.isArray(i.properties[t])?i.properties[t].push(a):i.properties[t]+=a:Array.isArray(i.properties[t])?i.properties[t].push(a):i.properties[t]=a,this.setCurrentProp(i.properties,t),"a"===t&&","!==a.slice(-1)&&(i.properties.a=Q(a))},parseNodePropertyContinued:function(e){if(this.currentProp[this.currentPropName]+=e,","!==e.slice(-1)){var t=this.getCurrentNode();t.properties.a=Q(t.properties.a)}},parseNodeSpecialProperty:function(e,t,a){for(var i=a.split('",'),r=0,n=i.length;r<n;r++)i[r]=i[r].trim().replace(/^\"/,"").replace(/\s/,"_");var o=i[0],s=i[1],l=i[2],u=i[3],f=i[4];switch(s){case"int":case"enum":case"bool":case"ULongLong":f=parseInt(f);break;case"double":case"Number":case"FieldOfView":f=parseFloat(f);break;case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":f=Q(f)}this.getPrevNode().properties[o]={type:s,type2:l,flag:u,value:f},this.setCurrentProp(this.getPrevNode().properties,o)},nodeEnd:function(){this.popStack()},isFlattenNode:function(e){return"subNodes"in e&&"properties"in e}}),Object.assign(U.prototype,{parse:function(e){var t=new H(e);t.skip(23);for(var a=t.getUint32(),i=new X;!this.endOfContent(t);)try{var r=this.parseNode(t,a);null!==r&&i.add(r.name,r)}catch(e){console.log(e)}return i},endOfContent:function(e){return e.size()%16==0?(e.getOffset()+160+16&-16)>=e.size():e.getOffset()+160+16>=e.size()},parseNode:function(e,t){var a=t>=7500?e.getUint64():e.getUint32(),i=t>=7500?e.getUint64():e.getUint32(),r=(t>=7500?e.getUint64():e.getUint32(),e.getUint8()),n=e.getString(r);if(0===a)return null;for(var o=[],s=0;s<i;s++)o.push(this.parseProperty(e));var l=o.length>0?o[0]:"",u=o.length>1?o[1]:"",f=o.length>2?o[2]:"",h={},d={},c=!1;for(1===i&&e.getOffset()===a&&(c=!0);a>e.getOffset();){var p=this.parseNode(e,t);if(null!==p)if(!0!==p.singleProperty)if("Connections"!==n||"C"!==p.name)if(p.name.match(/^Properties\d+$/))for(var m=Object.keys(p.properties),s=0,v=m.length;s<v;s++){var g=m[s];d[g]=p.properties[g]}else if(n.match(/^Properties\d+$/)&&"P"===p.name){var A,E=p.propertyList[0],T=p.propertyList[1],x=p.propertyList[2],F=p.propertyList[3];0===E.indexOf("Lcl ")&&(E=E.replace("Lcl ","Lcl_")),0===T.indexOf("Lcl ")&&(T=T.replace("Lcl ","Lcl_")),A="ColorRGB"===T||"Vector"===T||"Vector3D"===T||0===T.indexOf("Lcl_")?[p.propertyList[4],p.propertyList[5],p.propertyList[6]]:p.propertyList[4],d[E]={type:T,type2:x,flag:F,value:A}}else void 0===h[p.name]?"number"==typeof p.id?(h[p.name]={},h[p.name][p.id]=p):h[p.name]=p:""===p.id?(Array.isArray(h[p.name])||(h[p.name]=[h[p.name]]),h[p.name].push(p)):void 0===h[p.name][p.id]?h[p.name][p.id]=p:(Array.isArray(h[p.name][p.id])||(h[p.name][p.id]=[h[p.name][p.id]]),h[p.name][p.id].push(p));else{for(var y=[],s=1,v=p.propertyList.length;s<v;s++)y[s-1]=p.propertyList[s];void 0===d.connections&&(d.connections=[]),d.connections.push(y)}else{var _=p.propertyList[0];Array.isArray(_)?(h[p.name]=p,p.properties.a=_):d[p.name]=_}}return{singleProperty:c,id:l,attrName:u,attrType:f,name:n,properties:d,propertyList:o,subNodes:h}},parseProperty:function(e){var t=e.getChar();switch(t){case"C":return e.getBoolean();case"D":return e.getFloat64();case"F":return e.getFloat32();case"I":return e.getInt32();case"L":return e.getInt64();case"R":var a=e.getUint32();return e.getArrayBuffer(a);case"S":var a=e.getUint32();return e.getString(a);case"Y":return e.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":var i=e.getUint32(),r=e.getUint32(),n=e.getUint32();if(0===r)switch(t){case"b":case"c":return e.getBooleanArray(i);case"d":return e.getFloat64Array(i);case"f":return e.getFloat32Array(i);case"i":return e.getInt32Array(i);case"l":return e.getInt64Array(i)}if(void 0===window.Zlib)throw new Error("THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js");var o=new Zlib.Inflate(new Uint8Array(e.getArrayBuffer(n))),s=new H(o.decompress().buffer);switch(t){case"b":case"c":return s.getBooleanArray(i);case"d":return s.getFloat64Array(i);case"f":return s.getFloat32Array(i);case"i":return s.getInt32Array(i);case"l":return s.getInt64Array(i)}default:throw new Error("THREE.FBXLoader: Unknown property type "+t)}}}),Object.assign(H.prototype,{getOffset:function(){return this.offset},size:function(){return this.dv.buffer.byteLength},skip:function(e){this.offset+=e},getBoolean:function(){return 1==(1&this.getUint8())},getBooleanArray:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getBoolean());return t},getInt8:function(){var e=this.dv.getInt8(this.offset);return this.offset+=1,e},getInt8Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getInt8());return t},getUint8:function(){var e=this.dv.getUint8(this.offset);return this.offset+=1,e},getUint8Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getUint8());return t},getInt16:function(){var e=this.dv.getInt16(this.offset,this.littleEndian);return this.offset+=2,e},getInt16Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getInt16());return t},getUint16:function(){var e=this.dv.getUint16(this.offset,this.littleEndian);return this.offset+=2,e},getUint16Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getUint16());return t},getInt32:function(){var e=this.dv.getInt32(this.offset,this.littleEndian);return this.offset+=4,e},getInt32Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getInt32());return t},getUint32:function(){var e=this.dv.getUint32(this.offset,this.littleEndian);return this.offset+=4,e},getUint32Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getUint32());return t},getInt64:function(){var e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),2147483648&t?(t=4294967295&~t,e=4294967295&~e,4294967295===e&&(t=t+1&4294967295),e=e+1&4294967295,-(4294967296*t+e)):4294967296*t+e},getInt64Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getInt64());return t},getUint64:function(){var e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),4294967296*t+e},getUint64Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getUint64());return t},getFloat32:function(){var e=this.dv.getFloat32(this.offset,this.littleEndian);return this.offset+=4,e},getFloat32Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getFloat32());return t},getFloat64:function(){var e=this.dv.getFloat64(this.offset,this.littleEndian);return this.offset+=8,e},getFloat64Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getFloat64());return t},getArrayBuffer:function(e){var t=this.dv.buffer.slice(this.offset,this.offset+e);return this.offset+=e,t},getChar:function(){return String.fromCharCode(this.getUint8())},getString:function(e){for(var t="";e>0;){var a=this.getUint8();if(e--,0===a)break;t+=String.fromCharCode(a)}return t=decodeURIComponent(escape(t)),this.skip(e),t}}),Object.assign(X.prototype,{add:function(e,t){this[e]=t}})}()},function(e,t,a){"use strict";THREE.MTLLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.MTLLoader.prototype={constructor:THREE.MTLLoader,load:function(e,t,a,i){var r=this,n=new THREE.FileLoader(this.manager);n.setPath(this.path),n.load(e,function(e){t(r.parse(e))},a,i)},setPath:function(e){this.path=e},setTexturePath:function(e){this.texturePath=e},setBaseUrl:function(e){console.warn("THREE.MTLLoader: .setBaseUrl() is deprecated. Use .setTexturePath( path ) for texture path or .setPath( path ) for general base path instead."),this.setTexturePath(e)},setCrossOrigin:function(e){this.crossOrigin=e},setMaterialOptions:function(e){this.materialOptions=e},parse:function(e){for(var t=e.split("\n"),a={},i=/\s+/,r={},n=0;n<t.length;n++){var o=t[n];if(o=o.trim(),0!==o.length&&"#"!==o.charAt(0)){var s=o.indexOf(" "),l=s>=0?o.substring(0,s):o;l=l.toLowerCase();var u=s>=0?o.substring(s+1):"";if(u=u.trim(),"newmtl"===l)a={name:u},r[u]=a;else if(a)if("ka"===l||"kd"===l||"ks"===l){var f=u.split(i,3);a[l]=[parseFloat(f[0]),parseFloat(f[1]),parseFloat(f[2])]}else a[l]=u}}var h=new THREE.MTLLoader.MaterialCreator(this.texturePath||this.path,this.materialOptions);return h.setCrossOrigin(this.crossOrigin),h.setManager(this.manager),h.setMaterials(r),h}},THREE.MTLLoader.MaterialCreator=function(e,t){this.baseUrl=e||"",this.options=t,this.materialsInfo={},this.materials={},this.materialsArray=[],this.nameLookup={},this.side=this.options&&this.options.side?this.options.side:THREE.FrontSide,this.wrap=this.options&&this.options.wrap?this.options.wrap:THREE.RepeatWrapping},THREE.MTLLoader.MaterialCreator.prototype={constructor:THREE.MTLLoader.MaterialCreator,crossOrigin:"Anonymous",setCrossOrigin:function(e){this.crossOrigin=e},setManager:function(e){this.manager=e},setMaterials:function(e){this.materialsInfo=this.convert(e),this.materials={},this.materialsArray=[],this.nameLookup={}},convert:function(e){if(!this.options)return e;var t={};for(var a in e){var i=e[a],r={};t[a]=r;for(var n in i){var o=!0,s=i[n],l=n.toLowerCase();switch(l){case"kd":case"ka":case"ks":this.options&&this.options.normalizeRGB&&(s=[s[0]/255,s[1]/255,s[2]/255]),this.options&&this.options.ignoreZeroRGBs&&0===s[0]&&0===s[1]&&0===s[2]&&(o=!1)}o&&(r[l]=s)}}return t},preload:function(){for(var e in this.materialsInfo)this.create(e)},getIndex:function(e){return this.nameLookup[e]},getAsArray:function(){var e=0;for(var t in this.materialsInfo)this.materialsArray[e]=this.create(t),this.nameLookup[t]=e,e++;return this.materialsArray},create:function(e){return void 0===this.materials[e]&&this.createMaterial_(e),this.materials[e]},createMaterial_:function(e){function t(e,t){return"string"!=typeof t||""===t?"":/^https?:\/\//i.test(t)?t:e+t}function a(e,a){if(!n[e]){var r=i.getTextureParams(a,n),o=i.loadTexture(t(i.baseUrl,r.url));o.repeat.copy(r.scale),o.offset.copy(r.offset),o.wrapS=i.wrap,o.wrapT=i.wrap,n[e]=o}}var i=this,r=this.materialsInfo[e],n={name:e,side:this.side};for(var o in r){var s,l=r[o];if(""!==l)switch(o.toLowerCase()){case"kd":n.color=(new THREE.Color).fromArray(l);break;case"ks":n.specular=(new THREE.Color).fromArray(l);break;case"map_kd":a("map",l);break;case"map_ks":a("specularMap",l);break;case"norm":a("normalMap",l);break;case"map_bump":case"bump":a("bumpMap",l);break;case"ns":n.shininess=parseFloat(l);break;case"d":s=parseFloat(l),s<1&&(n.opacity=s,n.transparent=!0);break;case"tr":s=parseFloat(l),s>0&&(n.opacity=1-s,n.transparent=!0)}}return this.materials[e]=new THREE.MeshPhongMaterial(n),this.materials[e]},getTextureParams:function(e,t){var a,i={scale:new THREE.Vector2(1,1),offset:new THREE.Vector2(0,0)},r=e.split(/\s+/);return a=r.indexOf("-bm"),a>=0&&(t.bumpScale=parseFloat(r[a+1]),r.splice(a,2)),a=r.indexOf("-s"),a>=0&&(i.scale.set(parseFloat(r[a+1]),parseFloat(r[a+2])),r.splice(a,4)),a=r.indexOf("-o"),a>=0&&(i.offset.set(parseFloat(r[a+1]),parseFloat(r[a+2])),r.splice(a,4)),i.url=r.join(" ").trim(),i},loadTexture:function(e,t,a,i,r){var n,o=THREE.Loader.Handlers.get(e),s=void 0!==this.manager?this.manager:THREE.DefaultLoadingManager;return null===o&&(o=new THREE.TextureLoader(s)),o.setCrossOrigin&&o.setCrossOrigin(this.crossOrigin),n=o.load(e,a,i,r),void 0!==t&&(n.mapping=t),n}}},function(e,t,a){"use strict";THREE.OBJLoader=function(){function e(){var e={objects:[],object:{},vertices:[],normals:[],uvs:[],materialLibraries:[],startObject:function(e,t){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=e,void(this.object.fromDeclaration=!1!==t);var a=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0),this.object={name:e||"",fromDeclaration:!1!==t,geometry:{vertices:[],normals:[],uvs:[]},materials:[],smooth:!0,startMaterial:function(e,t){var a=this._finalize(!1);a&&(a.inherited||a.groupCount<=0)&&this.materials.splice(a.index,1);var i={index:this.materials.length,name:e||"",mtllib:Array.isArray(t)&&t.length>0?t[t.length-1]:"",smooth:void 0!==a?a.smooth:this.smooth,groupStart:void 0!==a?a.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(e){var t={index:"number"==typeof e?e:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return t.clone=this.clone.bind(t),t}};return this.materials.push(i),i},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(e){var t=this.currentMaterial();if(t&&-1===t.groupEnd&&(t.groupEnd=this.geometry.vertices.length/3,t.groupCount=t.groupEnd-t.groupStart,t.inherited=!1),e&&this.materials.length>1)for(var a=this.materials.length-1;a>=0;a--)this.materials[a].groupCount<=0&&this.materials.splice(a,1);return e&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),t}},a&&a.name&&"function"==typeof a.clone){var i=a.clone(0);i.inherited=!0,this.object.materials.push(i)}this.objects.push(this.object)},finalize:function(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(e,t){var a=parseInt(e,10);return 3*(a>=0?a-1:a+t/3)},parseNormalIndex:function(e,t){var a=parseInt(e,10);return 3*(a>=0?a-1:a+t/3)},parseUVIndex:function(e,t){var a=parseInt(e,10);return 2*(a>=0?a-1:a+t/2)},addVertex:function(e,t,a){var i=this.vertices,r=this.object.geometry.vertices;r.push(i[e+0],i[e+1],i[e+2]),r.push(i[t+0],i[t+1],i[t+2]),r.push(i[a+0],i[a+1],i[a+2])},addVertexLine:function(e){var t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addNormal:function(e,t,a){var i=this.normals,r=this.object.geometry.normals;r.push(i[e+0],i[e+1],i[e+2]),r.push(i[t+0],i[t+1],i[t+2]),r.push(i[a+0],i[a+1],i[a+2])},addUV:function(e,t,a){var i=this.uvs,r=this.object.geometry.uvs;r.push(i[e+0],i[e+1]),r.push(i[t+0],i[t+1]),r.push(i[a+0],i[a+1])},addUVLine:function(e){var t=this.uvs;this.object.geometry.uvs.push(t[e+0],t[e+1])},addFace:function(e,t,a,i,r,n,o,s,l){var u=this.vertices.length,f=this.parseVertexIndex(e,u),h=this.parseVertexIndex(t,u),d=this.parseVertexIndex(a,u);if(this.addVertex(f,h,d),void 0!==i){var c=this.uvs.length;f=this.parseUVIndex(i,c),h=this.parseUVIndex(r,c),d=this.parseUVIndex(n,c),this.addUV(f,h,d)}if(void 0!==o){var p=this.normals.length;f=this.parseNormalIndex(o,p),h=o===s?f:this.parseNormalIndex(s,p),d=o===l?f:this.parseNormalIndex(l,p),this.addNormal(f,h,d)}},addLineGeometry:function(e,t){this.object.geometry.type="Line";for(var a=this.vertices.length,i=this.uvs.length,r=0,n=e.length;r<n;r++)this.addVertexLine(this.parseVertexIndex(e[r],a));for(var o=0,n=t.length;o<n;o++)this.addUVLine(this.parseUVIndex(t[o],i))}};return e.startObject("",!1),e}function t(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager,this.materials=null}var a=/^[og]\s*(.+)?/,i=/^mtllib /,r=/^usemtl /;return t.prototype={constructor:t,load:function(e,t,a,i){var r=this,n=new THREE.FileLoader(r.manager);n.setPath(this.path),n.load(e,function(e){t(r.parse(e))},a,i)},setPath:function(e){this.path=e},setMaterials:function(e){return this.materials=e,this},parse:function(t){console.time("OBJLoader");var n=new e;-1!==t.indexOf("\r\n")&&(t=t.replace(/\r\n/g,"\n")),-1!==t.indexOf("\\\n")&&(t=t.replace(/\\\n/g,""));for(var o=t.split("\n"),s="",l="",u=[],f="function"==typeof"".trimLeft,h=0,d=o.length;h<d;h++)if(s=o[h],s=f?s.trimLeft():s.trim(),0!==s.length&&"#"!==(l=s.charAt(0)))if("v"===l){var c=s.split(/\s+/);switch(c[0]){case"v":n.vertices.push(parseFloat(c[1]),parseFloat(c[2]),parseFloat(c[3]));break;case"vn":n.normals.push(parseFloat(c[1]),parseFloat(c[2]),parseFloat(c[3]));break;case"vt":n.uvs.push(parseFloat(c[1]),parseFloat(c[2]))}}else if("f"===l){for(var p=s.substr(1).trim(),m=p.split(/\s+/),v=[],g=0,A=m.length;g<A;g++){var E=m[g];if(E.length>0){var T=E.split("/");v.push(T)}}for(var x=v[0],g=1,A=v.length-1;g<A;g++){var F=v[g],y=v[g+1];n.addFace(x[0],F[0],y[0],x[1],F[1],y[1],x[2],F[2],y[2])}}else if("l"===l){var _=s.substring(1).trim().split(" "),P=[],b=[];if(-1===s.indexOf("/"))P=_;else for(var L=0,S=_.length;L<S;L++){var w=_[L].split("/");""!==w[0]&&P.push(w[0]),""!==w[1]&&b.push(w[1])}n.addLineGeometry(P,b)}else if(null!==(u=a.exec(s))){var N=(" "+u[0].substr(1).trim()).substr(1);n.startObject(N)}else if(r.test(s))n.object.startMaterial(s.substring(7).trim(),n.materialLibraries);else if(i.test(s))n.materialLibraries.push(s.substring(7).trim());else{if("s"!==l){if("\0"===s)continue;throw new Error("Unexpected line: '"+s+"'")}if(u=s.split(" "),u.length>1){var R=u[1].trim().toLowerCase();n.object.smooth="0"!==R&&"off"!==R}else n.object.smooth=!0;var I=n.object.currentMaterial();I&&(I.smooth=n.object.smooth)}n.finalize();var M=new THREE.Group;M.materialLibraries=[].concat(n.materialLibraries);for(var h=0,d=n.objects.length;h<d;h++){var U=n.objects[h],H=U.geometry,X=U.materials,O="Line"===H.type;if(0!==H.vertices.length){var C=new THREE.BufferGeometry;C.addAttribute("position",new THREE.BufferAttribute(new Float32Array(H.vertices),3)),H.normals.length>0?C.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(H.normals),3)):C.computeVertexNormals(),H.uvs.length>0&&C.addAttribute("uv",new THREE.BufferAttribute(new Float32Array(H.uvs),2));for(var k=[],D=0,Q=X.length;D<Q;D++){var Y=X[D],I=void 0;if(null!==this.materials&&(I=this.materials.create(Y.name),O&&I&&!(I instanceof THREE.LineBasicMaterial))){var B=new THREE.LineBasicMaterial;B.copy(I),I=B}I||(I=O?new THREE.LineBasicMaterial:new THREE.MeshPhongMaterial,I.name=Y.name),I.flatShading=!Y.smooth,k.push(I)}var j;if(k.length>1){for(var D=0,Q=X.length;D<Q;D++){var Y=X[D];C.addGroup(Y.groupStart,Y.groupCount,D)}j=O?new THREE.LineSegments(C,k):new THREE.Mesh(C,k)}else j=O?new THREE.LineSegments(C,k[0]):new THREE.Mesh(C,k[0]);j.name=U.name,M.add(j)}}return console.timeEnd("OBJLoader"),M}},t}()},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=a(37);Object.keys(i).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[e]}})})},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i={default:new THREE.MeshPhysicalMaterial({emissive:0,roughness:1,envMapIntensity:.25})};i.default.envMap=(new THREE.CubeTextureLoader).load(["./assets/envmap/posx.jpg","./assets/envmap/negx.jpg","./assets/envmap/posy.jpg","./assets/envmap/negy.jpg","./assets/envmap/posz.jpg","./assets/envmap/negz.jpg"]),t.Materials=i},function(e,t,a){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}(),n=function(){function e(t,a,r,n){i(this,e),this.text=t,this.position=new THREE.Vector3(a,r,n),this.position2d=new THREE.Vector2,this.target=new THREE.Vector3,this.mesh=new THREE.Mesh(new THREE.SphereBufferGeometry(.1,12,12),new THREE.MeshPhysicalMaterial({emissive:16777215})),this.mesh.position.set(a,r,n)}return r(e,[{key:"update",value:function(e,t,a,i,r){this.target.copy(t.position),this.target.sub(this.position),this.target.normalize(),this.target.dot(a)<=0?(this.behindCamera=!1,this.target.copy(this.position),this.target.project(t),this.position2d.x=(this.target.x+1)*i,this.position2d.y=(1-this.target.y)*r):this.behindCamera=!0}},{key:"teleport",value:function(e){this.position.x+=e.x,this.position.z+=e.z,this.mesh.position.x+=e.x,this.mesh.position.z+=e.z}},{key:"draw",value:function(e){this.behindCamera||e.fillText(this.text,this.position2d.x,this.position2d.y)}}]),e}();t.TextNode=n},function(e,t,a){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}(),n=function(){function e(t,a){i(this,e),this.domElement=t,this.camera=a,this.raycaster=new THREE.Raycaster,this.mouse=new THREE.Vector2,this.rect=this.domElement.getBoundingClientRect()}return r(e,[{key:"resize",value:function(){this.rect=this.domElement.getBoundingClientRect()}},{key:"cast",value:function(e,t){return this.mouse.x=(e.clientX-this.rect.left)/this.rect.width*2-1,this.mouse.y=-((e.clientY-this.rect.top)/this.rect.height*2-1),this.raycaster.setFromCamera(this.mouse,this.camera),this.raycaster.intersectObjects(t)}}]),e}();t.Raycaster=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=a(41);Object.keys(i).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[e]}})})},function(e,t,a){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}(),n=function(){function e(){i(this,e),this.time=(new Date).getTime(),this.age=0}return r(e,[{key:"getDelta",value:function(){var e=(new Date).getTime(),t=(e-this.time)/1e3;return this.age+=t,this.time=e,t}}]),e}();t.Timer=n}]);